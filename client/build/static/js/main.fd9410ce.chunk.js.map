{"version":3,"sources":["resources/logo1.png","resources/people.jpg","resources/people1.jpg","utils/ProtectedRoute.js","components/MainMenu/index.js","utils/API.js","components/AuthMenu/index.js","components/Navbar/index.js","utils/useWindowSize.js","pages/Landing/index.js","components/LogInForms/partnerForm.js","components/LogInForms/volunteerForm.js","components/AltMenu/index.js","components/AltNavbar/index.js","pages/Login/index.js","components/SignUpForms/partnerForm.js","components/SignUpForms/volunteerForm.js","pages/Signup/index.js","utils/JoinedProjectContext.js","components/VolunteerSidebar/index.js","dashboard-content/volunteer/Profile/index.js","utils/AvailableProjectContext.js","dashboard-content/volunteer/NewProject/index.js","dashboard-content/volunteer/ActiveProjects/index.js","utils/UserContext.js","pages/VolunteerDashboard/index.js","utils/CreatedProjectContext.js","components/PartnerSidebar/index.js","dashboard-content/partner/NewProject/index.js","dashboard-content/partner/OrganizationInfo/index.js","dashboard-content/partner/CurrentProgress/index.js","pages/PartnerDashboard/index.js","pages/UserDashboard/index.js","pages/ForgotPassword/index.js","pages/ResetPassword/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProtectedRoute","Component","component","rest","user","isAuthenticated","localStorage","getItem","render","props","to","styling","menu","backgroundColor","item","color","fontFamily","fontSize","MainMenu","order","useState","current","setCurrent","onClick","e","key","selectedKeys","mode","style","Item","activeClass","spy","smooth","offset","duration","email","axios","post","token","password","get","volunteerData","put","partnerData","removeItem","delete","userCredentials","projectData","data","_id","repo","repoName","AuthMenu","handleLogout","a","API","console","log","Navbar","authenticated","visible","setVisible","logo","maxHeight","drawer","className","borderBottom","src","Logo","MenuOutlined","placement","closable","onClose","keyboard","bodyStyle","useWindowSize","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Content","Layout","Landing","width","content","paddingTop","margin","content2","container","wordWrap","maxWidth","marginLeft","marginRight","marginTop","valueProp","marginBottom","fontWeight","detail","textAlign","span","subHeaders","subContent","getStarted","borderRadius","groups","people","people2","container2","valueCreation","vogi","paddingRight","volunteer","partner","groupDescription","paddingLeft","groupHeader","xl","lg","md","sm","xs","PeopleImg","alt","justify","type","borderColor","minHeight","padding","PeopleImg2","id","PartnerLoginForm","formLayout","labelCol","wrapperCol","responsiveMargin","AntForm","useForm","form","name","initialValues","remember","onFinish","values","username","role","then","res","resetFields","setItem","JSON","stringify","location","reload","catch","response","status","setFields","errors","onFinishFailed","errorInfo","label","rules","message","required","colon","placeholder","Password","href","border","shape","htmlType","VolunteerLogIn","AltMenu","Login","wrapper","header","volunteerCard","partnerCard","AltNavbar","title","headStyle","xxl","PartnerSignUp","validator","rule","value","length","Promise","resolve","reject","VolunteerSignUp","SignUp","page","JoinedProjectContext","React","createContext","Sider","SubMenu","Menu","VolunteerSidebar","contentHandler","currentProjectHandler","collapsed","setCollapsed","topPadding","useEffect","joinedProjects","useContext","theme","collapsedWidth","overflow","borderRight","defaultSelectedKeys","icon","UserOutlined","PlusOutlined","UnorderedListOutlined","map","project","SettingOutlined","Profile","leftAlign","button","align","Form","volunteerFirstName","setFieldsValue","first","volunteerLastName","last","volunteerAbout","about","volunteerSkills","skills","notification","description","err","TextArea","AvailableProjectContext","NewProject","joinProjectHandler","projects","cardSize","fontStyle","ProjectCard","currentProject","card","cardBody","percent","setPercent","issuesData","setIssuesData","trim","issues","progress","Math","round","closedIssues","totalIssues","NaN","itemLayout","list","split","dataSource","renderItem","iconColor","state","CarryOutOutlined","open","UserContext","Footer","VolunteerDashboard","layout","height","contentDiv","setTitle","availableProjects","setAvailableProjects","currentProjects","setCurrentProjects","setCurrentProject","fetchedProjects","userID","projectID","Provider","forEach","renderContent","CreatedProjectContext","PartnerSidebar","fixed","RiseOutlined","projectValidator","formSize","OrganizationInfo","organizationType","organizationName","organizationAbout","Group","Button","Input","CurrentProject","body","rows","danger","PartnerDashboard","setProjects","strippedName","replace","projectNames","team","UserDashboard","userRole","setUserRole","setUser","renderDashboard","tailLayout","ForgotPassword","cardInfo","ResetPassword","redirect","setRedirect","pathname","useLocation","pop","hasFeedback","dependencies","getFieldValue","App","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,2PCiC5BC,MA5Bf,YAAmE,IAA7BC,EAA4B,EAAvCC,UAA+BC,GAAQ,EAAjBC,KAAiB,qCAI1DC,EAAkBC,aAAaC,QAAQ,UAC7C,OAUE,kBAAC,IAAD,iBACMJ,EADN,CAEEK,OAAQ,SAAAC,GAAK,OACS,OAApBJ,EACE,kBAACJ,EAAcQ,GAEf,kBAAC,IAAD,CAAUC,GAAG,gB,oECnBjBC,EAAU,CACdC,KAAM,CACJC,gBAAiB,WAEnBC,KAAM,CACJC,MAAO,UACPC,WAAY,UACZC,SAAU,SAgECC,MA3Df,SAAmBT,GAAQ,IACjBU,EAAUV,EAAVU,MADgB,EAEMC,mBAAS,QAFf,mBAEjBC,EAFiB,KAERC,EAFQ,KAaxB,OACE,kBAAC,IAAD,CACEC,QAXgB,SAAAC,GAElBF,EAAW,CAAED,QAASG,EAAEC,OAUtBC,aAAc,CAACL,GACfM,KAAMR,EACNS,MAAOjB,EAAQC,MAEf,kBAAC,IAAKiB,KAAN,CAAWJ,IAAI,cACb,kBAAC,OAAD,CACEf,GAAG,aACHkB,MAAOjB,EAAQG,KACfgB,YAAY,SACZC,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KAPZ,eAYF,kBAAC,IAAKL,KAAN,CAAWJ,IAAI,YACb,kBAAC,OAAD,CACEf,GAAG,WACHkB,MAAOjB,EAAQG,KACfgB,YAAY,SACZC,KAAK,EACLC,QAAQ,EACRC,QAAS,GACTC,SAAU,KAPZ,aAYF,kBAAC,IAAKL,KAAN,CAAWJ,IAAI,UACb,kBAAC,IAAD,CAAMf,GAAG,UAAUkB,MAAOjB,EAAQG,MAAlC,YAIF,kBAAC,IAAKe,KAAN,CAAWJ,IAAI,SACb,kBAAC,IAAD,CAAMf,GAAG,SAASkB,MAAOjB,EAAQG,MAAjC,a,4CCrEO,EACO,YAAsB,IAAVqB,EAAS,EAATA,MAC9B,OAAOC,IAAMC,KAAK,gBAAiB,CAAEF,WAF1B,EAIE,YAAgC,IAApBG,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAChC,OAAOH,IAAMC,KAAN,wBAA4BC,GAAS,CAAEC,cALnC,EAOJ,WACP,OAAOH,IAAMI,IAAI,mBARN,EAUI,SAAUC,GACzB,OAAOL,IAAMM,IAAI,0BAA2BD,IAXjC,EAaE,SAAUE,GACvB,OAAOP,IAAMM,IAAI,wBAAyBC,IAd/B,EAgBL,WAGN,OAFArC,aAAasC,WAAW,UACxBtC,aAAasC,WAAW,QACjBR,IAAMS,OAAO,iBAnBT,EAsBN,SAAUC,GACf,OAAOV,IAAMC,KAAK,qBAAsBS,IAvB7B,EA0BD,SAAUA,GACpB,OAAOV,IAAMC,KAAK,gBAAiBS,IA3BxB,EA8BE,SAAUC,GACvB,OAAOX,IAAMC,KAAK,mBAAoBU,IA/B3B,EAkCS,WACpB,OAAOX,IAAMI,IAAI,qBAnCN,EAsCA,SAAUO,GACrB,OAAOX,IAAMM,IAAI,mBAAoBK,IAvC1B,EA0CE,SAAUC,GACvB,OAAOZ,IAAMS,OAAN,2BAAiCG,EAAKC,IAAtC,iBAAkDD,EAAKE,QA3CnD,EA8CH,SAAUH,GAClB,OAAOX,IAAMC,KAAK,0BAA2BU,IA/ClC,EAkDC,SAAUI,GACtB,OAAOf,IAAMI,IAAN,wCAA2CW,KC9ChDxC,EAAU,CACdC,KAAM,CACJC,gBAAiB,WAEnBC,KAAM,CACJC,MAAO,UACPC,WAAY,UACZC,SAAU,SAgCCmC,MA3Bf,SAAmB3C,GAAQ,IACjBU,EAAUV,EAAVU,MADgB,EAEMC,mBAAS,QAFf,mBAEjBC,EAFiB,KAERC,EAFQ,KASlB+B,EAAY,uCAAG,sBAAAC,EAAA,+EAEXC,IAFW,sDAIjBC,QAAQC,IAAR,MAJiB,wDAAH,qDAQlB,OACE,kBAAC,IAAD,CAAMlC,QAdY,SAAAC,GAElBF,EAAW,CAAED,QAASG,EAAEC,OAYIC,aAAc,CAACL,GAAUM,KAAMR,EAAQS,MAAOjB,EAAQC,MAChF,kBAAC,IAAKiB,KAAN,CAAWJ,IAAI,cACb,kBAAC,IAAD,CAAMf,GAAG,IAAIa,QAAS8B,EAAczB,MAAOjB,EAAQG,MAAnD,a,2CCoCO4C,MAlEf,YAAqC,IAAlBC,EAAiB,EAAjBA,cAAiB,EAEJvC,oBAAS,GAFL,mBAE3BwC,EAF2B,KAElBC,EAFkB,KAI5BlD,EAAU,CACdmD,KAAM,CACJC,UAAW,UAEbC,OAAQ,CACNnD,gBAAiB,YAUrB,OACE,yBACEoD,UAAU,UACVrC,MAAO,CACLsC,aAAc,oBACdrD,gBAAiB,UACjBE,MAAO,YAGT,yBAAKkD,UAAU,QACb,kBAAC,IAAD,CAAMvD,GAAG,KACP,yBAAKyD,IAAKC,IAAMxC,MAAOjB,EAAQmD,SAGnC,yBAAKG,UAAU,WACb,yBAAKA,UAAU,aACZN,EACC,6BACE,kBAAC,EAAD,CAAUxC,MAAM,gBAGlB,6BACE,kBAAC,EAAD,CAAUA,MAAM,iBAItB,yBAAK8C,UAAU,YACb,kBAACI,EAAA,EAAD,CAAc9C,QAjCH,WACjBsC,GAAW,OAkCP,kBAAC,IAAD,CACES,UAAU,QACVC,UAAU,EACVC,QAnCQ,WACdX,GAAW,IAmCLD,QAASA,EACTa,UAAU,EACVC,UAAW/D,EAAQqD,QAElBL,EACC,kBAAC,EAAD,CAAUxC,MAAM,WAEhB,kBAAC,EAAD,CAAUA,MAAM,eCrDbwD,MAbf,WAA2B,IAAD,EACAvD,mBAAS,CAAC,EAAG,IADb,mBACjBwD,EADiB,KACXC,EADW,KAUxB,OARAC,2BAAgB,WACd,SAASC,IACPF,EAAQ,CAACG,OAAOC,WAAYD,OAAOE,cAIrC,OAFAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IACO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IACIH,G,oCCLDS,EAAYC,IAAZD,QAsOOE,MAnOf,WAAmB,MAEOZ,IAFP,mBAEVa,EAFU,KAGX7E,GAHW,KAGD,CACd8E,QAAS,CACPC,WAAYF,EAAQ,IAAM,GAAK,GAC/BG,OAAQ,EACR9E,gBAAiB,WAEnB+E,SAAU,CACRF,WAAYF,EAAQ,IAAM,GAAK,GAC/BG,OAAQ,EACR9E,gBAAiB,WAEnBgF,UAAW,CACTC,SAAU,aACVC,SAAUP,EAAQ,IAAM,OAAS,OACjCQ,WAA0B,OAC1BC,YAAaT,EAAQ,IAAM,OAAS,IACpCU,UAAWV,EAAQ,IAAM,OAAS,SAClCzE,MAAO,WAEToF,UAAW,CACTnF,WAAY,UACZC,SAAUuE,EAAQ,IAAM,QAAU,MAClCS,YAAa,OACbG,aAAc,SACdC,WAAY,KAEdC,OAAQ,CACNrF,SAAU,UACVsF,UAAW,OACXN,YAAa,QAEfO,KAAM,CACJzF,MAAO,WAET0F,WAAY,CACVxF,SAAUuE,EAAQ,IAAM,UAAY,QACpCU,UAAWV,EAAQ,IAAM,IAAM,OAEjCkB,WAAY,CACVzF,SAAU,UACVsF,UAAW,SACXxF,MAAO,QACPiF,WAAY,OACZC,YAAa,QAEfU,WAAY,CACVC,aAAc,OACd/F,gBAAiB,UACjBE,MAAO,WAET8F,OAAQ,CACNX,UAAWV,EAAQ,IAAM,MAAQ,MACjCQ,WAA0B,OAC1BC,YAA2B,QAE7Ba,OAAQ,CACNtB,MAAOA,EAAQ,IAAM,OAAS,OAC9BU,UAAWV,EAAQ,IAAM,EAAI,OAE/BuB,QAAS,CACPb,UAAWV,EAAQ,IAAM,MAAQ,MACjCY,aAAcZ,EAAQ,IAAM,MAAQ,EACpCA,MAAOA,EAAQ,IAAM,OAAS,QAEhCwB,WAAY,CACVnG,gBAAiB,UACjBiF,SAAU,aACVC,SAAU,QACVC,WAAYR,EAAQ,IAAM,OAAS,IACnCS,YAAaT,EAAQ,IAAM,OAAS,IACpCU,UAAW,QAEbe,cAAe,CACbjG,WAAY,UACZC,SAAUuE,EAAQ,IAAM,SAAW,UACnCzE,MAAO,UACPmF,UAAWV,EAAQ,IAAM,OAAS,MAClCQ,WAAYR,EAAQ,IAAM,SAAW,UACrCa,WAAY,KAEda,KAAM,CACJjG,SAAwB,UACxBkG,aAAc,MACdpG,MAAO,QACPmF,UAAWV,EAAQ,IAAM,OAAS,UAEpC4B,UAAW,CACT5B,MAAOA,EAAQ,IAAM,OAAS,QAC9BQ,WAAYR,EAAQ,IAAM,OAAS,IACnCS,YAAaT,EAAQ,IAAM,OAAS,IACpCzE,MAAO,WAETsG,QAAS,CACP7B,MAAOA,EAAQ,IAAM,OAAS,QAC9BQ,WAAYR,EAAQ,IAAM,OAAS,IACnCS,YAAaT,EAAQ,IAAM,OAAS,IACpCzE,MAAO,WAETuG,iBAAkB,CAChBC,YAA2B,MAC3BJ,aAA4B,MAC5BlG,SAAUuE,EAAQ,IAAM,UAAY,OACpCM,SAAU,cAEZ0B,YAAa,CACXxG,WAAY,UACZC,SAAUuE,EAAQ,IAAM,SAAW,OACnCzE,MAAO,UACPmF,UAAWV,EAAQ,IAAM,OAAS,MAClCQ,WAAYR,EAAQ,IAAM,SAAW,UACrCa,WAAY,OAIhB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAChB,EAAD,CAASzD,MAAOjB,EAAQ8E,SACtB,kBAAC,IAAD,CAAK7D,MAAOjB,EAAQkF,WAClB,kBAAC,IAAD,CAAK4B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,uBAAGjG,MAAOjB,EAAQwF,WAAlB,kEAEE,0BAAMvE,MAAOjB,EAAQ6F,MAArB,8BAGJ,kBAAC,IAAD,CAAKiB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,yBACE1D,IAAK2D,IACLlG,MAAOjB,EAAQmG,OACfiB,IAAI,mEAIV,kBAAC,IAAD,CAAKC,QAAQ,SAASpG,MAAOjB,EAAQkG,QACnC,kBAAC,IAAD,CAAKY,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,6BACE,wBAAIjG,MAAOjB,EAAQ8F,YAAnB,mBACA,uBAAG7E,MAAOjB,EAAQ+F,YAAlB,oEAGA,kBAAC,IAAD,CAAQ9E,MAAOjB,EAAQgG,YAAvB,iBAGJ,kBAAC,IAAD,CAAKc,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACnC,kBAAC,IAAD,CACEI,KAAK,WACLrG,MAAO,CACLsG,YAAa,UACbC,UAAW,OACXC,QAAS,EACTzC,OAAQ,MAId,kBAAC,IAAD,CAAK8B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,6BACE,wBAAIjG,MAAOjB,EAAQ8F,YAAnB,kBACA,uBAAG7E,MAAOjB,EAAQ+F,YAAlB,2FAIA,kBAAC,IAAD,CAAQ9E,MAAOjB,EAAQgG,YAAvB,mBAKR,kBAACtB,EAAD,CAASzD,MAAOjB,EAAQiF,UACtB,kBAAC,IAAD,CAAKoC,QAAQ,SAASpG,MAAOjB,EAAQqG,YACnC,kBAAC,IAAD,CAAKS,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,yBACE1D,IAAKkE,IACLzG,MAAOjB,EAAQoG,QACfgB,IAAI,wDAGR,kBAAC,IAAD,CAAKN,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,6BACE,wBAAIjG,MAAOjB,EAAQsG,eAAnB,mBAEF,uBAAGrF,MAAOjB,EAAQuG,MAAlB,oKAOJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKtF,MAAOjB,EAAQyG,UAAWkB,GAAG,cAChC,yBAAK1G,MAAOjB,EAAQ2G,kBAClB,wBAAI1F,MAAOjB,EAAQ6G,aAAnB,cACA,qYAUJ,kBAAC,IAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGjG,MAAO,CAAEoE,WAAY,OAAQC,YAAa,SAChF,kBAAC,IAAD,CACEgC,KAAK,aACLrG,MAAO,CAAEsG,YAAa,UAAWnC,SAAU,WAG/C,kBAAC,IAAD,CAAKnE,MAAOjB,EAAQ0G,QAASiB,GAAG,YAC9B,yBAAK1G,MAAOjB,EAAQ2G,kBAClB,wBAAI1F,MAAOjB,EAAQ6G,aAAnB,YACA,oU,oBCnHCe,OArGf,WAA8B,IAAD,EACX5D,IAATa,EADoB,oBAErB7E,EAAU,CACd6H,WAAY,CACVC,SAAU,CACRjC,KAAM,GAERkC,WAAY,CACVlC,KAAM,KAGVmC,iBAAkB,CAChBvC,aAAcZ,EAAQ,IAAM,GAAK,IAZV,EAeZoD,KAAQC,UAAhBC,EAfoB,oBAiB3B,OADwBxI,aAAaC,QAAQ,UACjB,kBAAC,IAAD,CAAUG,GAAG,oBAgCvC,kBAAC,KAAD,CACEkE,KAAMY,EAAQ,IAAM,UAAY,QAChCsD,KAAMA,EACNC,KAAK,eACLC,cAAe,CAAE7G,MAAO,GAAII,SAAU,GAAI0G,UAAU,GACpDC,SAnCa,SAAAC,GAAW,IAClBhH,EAAoBgH,EAApBhH,MAAOI,EAAa4G,EAAb5G,SACfgB,EAAU,CAAE6F,SAAUjH,EAAOI,WAAU8G,KAAM,YAC1CC,MAAK,SAAAC,GACJT,EAAKU,cACLlJ,aAAamJ,QAAQ,SAAUC,KAAKC,UAAUJ,EAAIvG,OAClD1C,aAAamJ,QAAQ,OAAQ,WAC7BzE,OAAO4E,SAASC,YAEjBC,OAAM,SAAAtI,GACqB,MAAtBA,EAAEuI,SAASC,QACblB,EAAKmB,UAAU,CACb,CACElB,KAAM,WACNmB,OAAQ,CAAC,+BAEX,CACEnB,KAAM,QACNmB,OAAQ,CAAC,YAkBjBC,eAXmB,SAAAC,GACrB5G,QAAQC,IAAI,UAAW2G,KAYrB,kBAAC,KAAQvI,KAAT,iBACMlB,EAAQ6H,WADd,CAEE6B,MAAM,SACNC,MAAO,CACL,CACErC,KAAM,QACNsC,QAAS,kCAEX,CAAEC,UAAU,EAAMD,QAAS,8BAE7BE,OAAO,EACP1B,KAAK,UAEL,kBAAC,KAAD,CAAO2B,YAAY,yBAGrB,kBAAC,KAAQ7I,KAAT,iBACMlB,EAAQ6H,WADd,CAEE6B,MAAM,WACNC,MAAO,CAAC,CAAEE,UAAU,EAAMD,QAAS,gCACnCE,OAAO,EACP1B,KAAK,aAEL,kBAAC,KAAM4B,SAAP,CAAgBD,YAAY,4BAE9B,kBAAC,KAAQ7I,KAAT,KACE,uBAAGoC,UAAU,oBAAoB2G,KAAK,WAAtC,oBAIF,kBAAC,KAAQ/I,KAAT,CAAcD,MAAOjB,EAAQgI,kBAC3B,kBAAC,IAAD,CACE/G,MAAO,CAAEf,gBAAiB,UAAWgK,OAAQ,QAC7C5C,KAAK,UACL6C,MAAM,QACNC,SAAS,UAJX,aCcOC,OAtGf,WAA4B,IAAD,EACTrG,IAATa,EADkB,oBAEnB7E,EAAU,CACd6H,WAAY,CACVC,SAAU,CACRjC,KAAM,GAERkC,WAAY,CACVlC,KAAM,KAGVmC,iBAAkB,CAChBvC,aAAcZ,EAAQ,IAAM,GAAK,IAZZ,EAeVoD,KAAQC,UAAhBC,EAfkB,oBAiBzB,OADwBxI,aAAaC,QAAQ,UACjB,kBAAC,IAAD,CAAUG,GAAG,oBAkCvC,kBAAC,KAAD,CACEkE,KAAMY,EAAQ,IAAM,UAAY,QAChCsD,KAAMA,EACNC,KAAK,iBACLC,cAAe,CAAE7G,MAAO,GAAII,SAAU,GAAI0G,UAAU,GACpDC,SArCa,SAAAC,GAAW,IAClBhH,EAAoBgH,EAApBhH,MAAOI,EAAa4G,EAAb5G,SACfgB,EAAU,CAAE6F,SAAUjH,EAAOI,WAAU8G,KAAM,cAC1CC,MAAK,SAAAC,GACJ/F,QAAQC,IAAI8F,GACZT,EAAKU,cACLlJ,aAAamJ,QAAQ,SAAUC,KAAKC,UAAUJ,EAAIvG,OAClD1C,aAAamJ,QAAQ,OAAQ,aAC7BzE,OAAO4E,SAASC,YAEjBC,OAAM,SAAAtI,GACLgC,QAAQC,IAAIjC,EAAEuI,SAAS/G,KAAKuH,SACF,MAAtB/I,EAAEuI,SAASC,QACblB,EAAKmB,UAAU,CACb,CACElB,KAAM,WACNmB,OAAQ,CAAC,+BAEX,CACEnB,KAAM,QACNmB,OAAQ,CAAC,YAkBjBC,eAXmB,SAAAC,GACrB5G,QAAQC,IAAI,UAAW2G,KAYrB,kBAAC,KAAQvI,KAAT,iBACMlB,EAAQ6H,WADd,CAEE6B,MAAM,SACNC,MAAO,CACL,CACErC,KAAM,QACNsC,QAAS,kCAEX,CAAEC,UAAU,EAAMD,QAAS,8BAE7BE,OAAO,EACP1B,KAAK,UAEL,kBAAC,KAAD,CAAO2B,YAAY,yBAErB,kBAAC,KAAQ7I,KAAT,iBACMlB,EAAQ6H,WADd,CAEE6B,MAAM,WACNC,MAAO,CAAC,CAAEE,UAAU,EAAMD,QAAS,gCACnCE,OAAO,EACP1B,KAAK,aAEL,kBAAC,KAAM4B,SAAP,CAAgBD,YAAY,4BAE9B,kBAAC,KAAQ7I,KAAT,KACE,uBAAGoC,UAAU,oBAAoB2G,KAAK,WAAtC,oBAIF,kBAAC,KAAQ/I,KAAT,CAAcD,MAAOjB,EAAQgI,kBAC3B,kBAAC,IAAD,CACE/G,MAAO,CAAEf,gBAAiB,UAAWgK,OAAQ,QAC7C5C,KAAK,UACL6C,MAAM,QACNC,SAAS,UAJX,a,UCxFFpK,GAAU,CACdC,KAAM,CACJC,gBAAiB,WAEnBC,KAAM,CACJC,MAAO,UACPC,WAAY,UACZC,SAAU,SAqCCgK,OAhCf,SAAkBxK,GAAQ,IAChBU,EAAUV,EAAVU,MADe,EAEOC,mBAAS,QAFhB,mBAEhBC,EAFgB,KAEPC,EAFO,KAYvB,OACE,kBAAC,IAAD,CACEC,QAVgB,SAAAC,GAElBF,EAAW,CAAED,QAASG,EAAEC,OAStBC,aAAc,CAACL,GACfM,KAAMR,EACNS,MAAOjB,GAAQC,MAEf,kBAAC,IAAKiB,KAAN,CAAWJ,IAAI,UACb,kBAAC,IAAD,CAAMf,GAAG,UAAUkB,MAAOjB,GAAQG,MAAlC,YAIF,kBAAC,IAAKe,KAAN,CAAWJ,IAAI,SACb,kBAAC,IAAD,CAAMf,GAAG,SAASkB,MAAOjB,GAAQG,MAAjC,a,OC+BO4C,OAlEf,YAAqC,IAAlBC,EAAiB,EAAjBA,cAAiB,EAEJvC,oBAAS,GAFL,mBAE3BwC,EAF2B,KAElBC,EAFkB,KAI5BlD,EAAU,CACdmD,KAAM,CACJC,UAAW,UAEbC,OAAQ,CACNnD,gBAAiB,YAUrB,OACE,yBACEoD,UAAU,UACVrC,MAAO,CACLsC,aAAc,oBACdrD,gBAAiB,UACjBE,MAAO,YAGT,yBAAKkD,UAAU,QACb,kBAAC,IAAD,CAAMvD,GAAG,KACP,yBAAKyD,IAAKC,IAAMxC,MAAOjB,EAAQmD,SAGnC,yBAAKG,UAAU,WACb,yBAAKA,UAAU,aACZN,EACC,6BACE,kBAAC,EAAD,CAAUxC,MAAM,gBAGlB,6BACE,kBAAC,GAAD,CAASA,MAAM,iBAIrB,yBAAK8C,UAAU,YACb,kBAACI,EAAA,EAAD,CAAc9C,QAjCH,WACjBsC,GAAW,OAkCP,kBAAC,IAAD,CACES,UAAU,QACVC,UAAU,EACVC,QAnCQ,WACdX,GAAW,IAmCLD,QAASA,EACTa,UAAU,EACVC,UAAW/D,EAAQqD,QAElBL,EACC,kBAAC,EAAD,CAAUxC,MAAM,WAEhB,kBAAC,GAAD,CAASA,MAAM,eC7DnBkE,GAAYC,IAAZD,QA+EO6F,OA7Ef,WAAmB,IAAD,EACAvG,IAATa,EADS,oBAEV7E,EAAU,CACdwK,QAAS,GACTC,OAAQ,CACNP,OAAQ,OACR9J,MAAO,UACPE,SAAUuE,EAAQ,IAAM,GAAK,IAE/BC,QAAS,CACPC,WAAYF,EAAQ,IAAM,GAAK,GAC/BG,OAAQ,EACRwC,UAAW3C,EAAQ,IAAM,OAAS,OAClC3E,gBAAiB,WAEnBwK,cAAe,CACb7F,MAAO,OACPQ,WAAY,OACZI,aAAcZ,EAAQ,IAAM,KAAO,KACnCU,UAAWV,EAAQ,IAAM,MAAQ,KACjCqF,OAAQ,oBACRjE,aAAc,QAGhB0E,YAAa,CACX9F,MAAO,OACPQ,WAAY,OACZI,aAAcZ,EAAQ,IAAM,KAAO,KACnCU,UAAWV,EAAQ,IAAM,MAAQ,KACjCqF,OAAQ,oBACRjE,aAAc,SAGlB,OACE,oCACE,kBAAC2E,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAS3J,MAAOjB,EAAQ8E,SACtB,kBAAC,IAAD,CAAKuC,QAAQ,UACX,kBAAC,IAAD,CAAKP,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,kBAAC,KAAD,CACEjD,KAAMY,EAAQ,IAAM,UAAY,QAChCgG,MAAM,mBACNC,UAAW9K,EAAQyK,OACnBxJ,MAAOjB,EAAQ0K,eAEf,kBAAC,GAAD,QAGJ,kBAAC,IAAD,CAAKpH,UAAU,aAAawD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC1D,kBAAC,IAAD,CACEI,KAAK,WACLrG,MAAO,CACLsG,YAAa,UACbC,UAAW,OACXjC,UAAW,WAKjB,kBAAC,IAAD,CAAKwF,IAAK,GAAIhE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACxC,kBAAC,KAAD,CACEjD,KAAMY,EAAQ,IAAM,UAAY,QAChCgG,MAAM,iBACNC,UAAW9K,EAAQyK,OACnBxJ,MAAOjB,EAAQ2K,aAEf,kBAAC,GAAD,aCkCDK,OAxGf,WAA2B,IAAD,EACAhH,IADA,mBACjBa,EADiB,KAElB7E,GAFkB,KAGV,CACV8H,SAAU,CACRjC,KAAM,GAERkC,WAAY,CACVlC,KAAM,MARY,EAmBToC,KAAQC,UAAhBC,EAnBiB,oBAqBxB,OADwBxI,aAAaC,QAAQ,UACjB,kBAAC,IAAD,CAAUG,GAAG,oBAmCvC,kBAAC,KAAD,CACEkE,KAAMY,EAAQ,IAAM,UAAY,QAChCsD,KAAMA,EACNC,KAAK,eACLC,cAAe,CAAE7G,MAAO,GAAII,SAAU,GAAI0G,UAAU,GACpDC,SAtCa,SAAAC,GAAW,IAClBhH,EAAoBgH,EAApBhH,MAAOI,EAAa4G,EAAb5G,SACfgB,EAAe,CAAE6F,SAAUjH,EAAOI,WAAU8G,KAAM,YAC/CC,MAAK,SAAAC,GACJT,EAAKU,cACLlJ,aAAamJ,QAAQ,OAAQ,WAC7BnJ,aAAamJ,QAAQ,SAAUC,KAAKC,UAAUJ,EAAIvG,OAClDgC,OAAO4E,SAASC,YAEjBC,OAAM,SAAAtI,GACDA,EAAEuI,UAAYvI,EAAEuI,SAAS/G,MAC3B8F,EAAKmB,UAAU,CACb,CACElB,KAAM,QACNmB,OAAQ,CAAC1I,EAAEuI,SAAS/G,KAAKuH,gBAyBjCJ,eAXmB,SAAAC,GACrB5G,QAAQC,IAAI,UAAW2G,KAYrB,kBAAC,KAAQvI,KAAT,iBACMlB,EADN,CAEE0J,MAAM,SACNC,MAAO,CACL,CACErC,KAAM,QACNsC,QAAS,oCAEX,CAAEC,UAAU,EAAMD,QAAS,8BAE7BE,OAAO,EACP1B,KAAK,UAEL,kBAAC,KAAD,CAAO2B,YAAY,yBAErB,kBAAC,KAAQ7I,KAAT,iBACMlB,EADN,CAEE0J,MAAM,WACNC,MAAO,CACL,CAAEsB,UAvCc,SAACC,EAAMC,GAC7B,OAAIA,EAAMC,OAAS,EACVC,QAAQC,UAEVD,QAAQE,OAAO,6CAoChB,CAAE1B,UAAU,EAAMD,QAAS,MAE7BE,OAAO,EACP1B,KAAK,aAEL,kBAAC,KAAM4B,SAAP,CAAgBD,YAAY,0BAE9B,kBAAC,KAAQ7I,KAAT,KACE,kBAAC,IAAD,CACED,MAAO,CAAEf,gBAAiB,UAAWgK,OAAQ,QAC7CC,MAAM,QACNC,SAAS,SACT9C,KAAK,WAJP,cCUOkE,OAtGf,WAA6B,IAAD,EACFxH,IADE,mBACnBa,EADmB,KAEpB7E,GAFoB,KAGZ,CACV8H,SAAU,CACRjC,KAAM,GAERkC,WAAY,CACVlC,KAAM,MARc,EAeXoC,KAAQC,UAAhBC,EAfmB,oBAiB1B,OADwBxI,aAAaC,QAAQ,UACjB,kBAAC,IAAD,CAAUG,GAAG,oBAkCvC,oCACE,kBAAC,KAAD,CACEkE,KAAMY,EAAQ,IAAM,UAAY,QAChCsD,KAAMA,EACNC,KAAK,iBACLC,cAAe,CAAE7G,MAAO,GAAII,SAAU,GAAI0G,UAAU,GACpDC,SAtCW,SAAAC,GAAW,IAClBhH,EAAoBgH,EAApBhH,MAAOI,EAAa4G,EAAb5G,SACfgB,EAAe,CAAE6F,SAAUjH,EAAOI,WAAU8G,KAAM,cAC/CC,MAAK,SAAAC,GACJT,EAAKU,cACLlJ,aAAamJ,QAAQ,SAAUC,KAAKC,UAAUJ,EAAIvG,OAClD1C,aAAamJ,QAAQ,OAAQ,aAC7BzE,OAAO4E,SAASC,YAEjBC,OAAM,SAAAtI,GACDA,EAAEuI,UAAYvI,EAAEuI,SAAS/G,MAC3B8F,EAAKmB,UAAU,CACb,CACElB,KAAM,QACNmB,OAAQ,CAAC1I,EAAEuI,SAAS/G,KAAKuH,gBAyB/BJ,eAZiB,SAAAC,GACrB5G,QAAQC,IAAI,UAAW2G,KAanB,kBAAC,KAAQvI,KAAT,iBACMlB,EADN,CAEE0J,MAAM,SACNC,MAAO,CACL,CACErC,KAAM,QACNsC,QAAS,oCAEX,CAAEC,UAAU,EAAMD,QAAS,8BAE7BE,OAAO,EACP1B,KAAK,UAEL,kBAAC,KAAD,CAAO2B,YAAY,yBAErB,kBAAC,KAAQ7I,KAAT,iBACMlB,EADN,CAEE0J,MAAM,WACNC,MAAO,CACL,CAAEsB,UAxCY,SAACC,EAAMC,GAC7B,OAAIA,EAAMC,OAAS,EACVC,QAAQC,UAEVD,QAAQE,OAAO,6CAqCd,CAAE1B,UAAU,EAAMD,QAAS,MAE7BE,OAAO,EACP1B,KAAK,aAEL,kBAAC,KAAM4B,SAAP,CAAgBD,YAAY,0BAE9B,kBAAC,KAAQ7I,KAAT,KACE,kBAAC,IAAD,CACED,MAAO,CAAGf,gBAAiB,UAAWgK,OAAQ,QAC9C5C,KAAK,UACL6C,MAAM,QACNC,SAAS,UAJX,eCtFF1F,GAAYC,IAAZD,QA+EO+G,OA7Ef,WAAoB,IAAD,EACDzH,IAATa,EADU,oBAEX7E,EAAU,CACdwK,QAAS,GACTC,OAAQ,CACNP,OAAQ,OACR9J,MAAO,UACPE,SAAUuE,EAAQ,IAAM,GAAK,IAE/BC,QAAS,CACPC,WAAYF,EAAQ,IAAM,GAAK,GAC/BG,OAAQ,EACRwC,UAAW3C,EAAQ,IAAM,OAAS,OAClC3E,gBAAiB,WAEnBwK,cAAe,CACb7F,MAAO,OACPQ,WAAY,OACZI,aAAcZ,EAAQ,IAAM,KAAO,KACnCU,UAAWV,EAAQ,IAAM,MAAQ,KACjCqF,OAAQ,oBACRjE,aAAc,QAGhB0E,YAAa,CACX9F,MAAO,OACPQ,WAAY,OACZI,aAAcZ,EAAQ,IAAM,KAAO,KACnCU,UAAWV,EAAQ,IAAM,MAAQ,KACjCqF,OAAQ,oBACRjE,aAAc,SAGlB,OACE,yBAAKhF,MAAOjB,EAAQ0L,MAClB,kBAACd,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAS3J,MAAOjB,EAAQ8E,SACtB,kBAAC,IAAD,CAAKuC,QAAQ,UACX,kBAAC,IAAD,CAAKP,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,kBAAC,KAAD,CACEjD,KAAMY,EAAQ,IAAM,UAAY,QAChCgG,MAAM,oBACNC,UAAW9K,EAAQyK,OACnBxJ,MAAOjB,EAAQ0K,eAEf,kBAAC,GAAD,QAGJ,kBAAC,IAAD,CAAKpH,UAAU,aAAawD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC1D,kBAAC,IAAD,CACEI,KAAK,WAELrG,MAAO,CACLsG,YAAa,UACbC,UAAW,OACXjC,UAAW,WAIjB,kBAAC,IAAD,CAAKuB,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,kBAAC,KAAD,CACEjD,KAAMY,EAAQ,IAAM,UAAY,QAChCgG,MAAM,kBACNC,UAAW9K,EAAQyK,OACnBxJ,MAAOjB,EAAQ2K,aAEf,kBAAC,GAAD,a,iDCzEDgB,GAFcC,IAAMC,gBCS3BC,GAAUnH,IAAVmH,MACAC,GAAYC,IAAZD,QAuFOE,OArFf,YAAuE,IAA1CC,EAAyC,EAAzCA,eAAgBC,EAAyB,EAAzBA,sBAAyB,EAC5CnI,IAD4C,mBAC7Da,EAD6D,aAElCpE,oBAAS,IAFyB,mBAE7D2L,EAF6D,KAElDC,EAFkD,KAI9DrM,EAAU,CACdgI,iBAAkB,CAChB3C,WAAYR,EAAQ,KAAO,GAAK,GAElCyH,WAAY,CACVvH,WAAYF,EAAQ,IAAM,MAAQ,SAItC0H,qBAAU,WACMF,EAAdxH,EAAQ,OACP,CAACA,IACJ,IAAM2H,EAAiBC,qBAAWd,IAalC,OACE,kBAACG,GAAD,CACEY,MAAM,QAENN,UAAWA,EACXnI,KAAK,QACL0I,eAAe,OACf1L,MAAO,CACL2L,SAAU,OACVC,YAAa,sBAKf,kBAAC,IAAD,CACEC,oBAAqB,CAAC,KACtB9L,KAAK,SACLC,MAAOjB,EAAQsM,YAEf,kBAAC,IAAKpL,KAAN,CACEN,QAAS,kBAAMsL,EAAe,YAC9BpL,IAAI,IACJG,MAAO,CAAE2F,YAAa,QACtBmG,KAAM,kBAACC,GAAA,EAAD,OAJR,WAQA,kBAAC,IAAK9L,KAAN,CACEN,QAAS,kBAAMsL,EAAe,uBAC9BpL,IAAI,IACJiM,KAAM,kBAACE,GAAA,EAAD,MACNhM,MAAO,CAAE2F,YAAa,SAJxB,eAQA,kBAACmF,GAAD,CACEjL,IAAI,OACJiM,KAAM,kBAACG,GAAA,EAAD,MACNrC,MAAM,kBACN5J,MAAOjB,EAAQgI,kBAjDdwE,EAAeW,KAAI,SAAAC,GAAO,OAC/B,kBAAC,IAAKlM,KAAN,CACEJ,IAAKsM,EAAQ9K,IACb1B,QAAS,kBAAMuL,EAAsBiB,EAAQ9K,OAE5C8K,EAAQhF,UAgDT,kBAAC,IAAKlH,KAAN,CACEN,QAAS,kBAAMsL,EAAe,aAC9BpL,IAAI,IACJiM,KAAM,kBAACM,GAAA,EAAD,MACNpM,MAAO,CAAE2F,YAAa,SAJxB,e,UCyBO0G,OA1Gf,WAAqB,IAAD,EACFtJ,IACVhE,EAAU,CACd6H,WAAY,CACVC,SAAU,CACRjC,KAAM,GAERkC,WAAY,CACVlC,KAAM,KAGV0H,UAAW,CACT3H,UAAW,QAEb4H,OAAQ,CACN3H,KAAM,GACN4H,MAAO,SACPvN,gBAAiB,UACjBgK,OAAQ,QAEVpF,QAAS,CACP0C,UArBc,oBAqBK,IAAM,OAAS,SArBpB,EAwBHkG,KAAKxF,UAAbC,EAxBW,oBAwDlB,OAbAoE,qBAAU,WACR3J,IAAc+F,MAAK,SAAAC,GACbA,EAAIvG,KAAKsL,oBACXxF,EAAKyF,eAAe,CAAEC,MAAOjF,EAAIvG,KAAKsL,qBACpC/E,EAAIvG,KAAKyL,mBACX3F,EAAKyF,eAAe,CAAEG,KAAMnF,EAAIvG,KAAKyL,oBACnClF,EAAIvG,KAAK2L,gBACX7F,EAAKyF,eAAe,CAAEK,MAAOrF,EAAIvG,KAAK2L,iBACpCpF,EAAIvG,KAAK6L,iBACX/F,EAAKyF,eAAe,CAAEO,OAAQvF,EAAIvG,KAAK6L,uBAE1C,IAGD,yBAAKjN,MAAOjB,EAAQ8E,SAClB,kBAAC,KAAD,CAAMyD,SA1BO,SAAAC,GACf5F,EAAoB4F,GACjBG,MAAK,SAAAC,GATuB,IAAAtB,EAW3B,OAX2BA,EAUF,UAT7B8G,KAAa9G,GAAM,CACjBsC,QAAS,kBACTyE,YAAa,gDAQJzF,EAAIvG,QAEZ8G,OAAM,SAAAmF,GACLzL,QAAQC,IAAIwL,OAmBYnG,KAAMA,GAC9B,kBAAC,KAAKjH,KAAN,iBACMlB,EAAQ6H,WADd,CAEEO,KAAK,QACL0B,OAAO,EACPJ,MAAM,eAEN,kBAAC,KAAD,CAAOK,YAAY,8BAErB,kBAAC,KAAK7I,KAAN,iBACMlB,EAAQ6H,WADd,CAEEO,KAAK,OACL0B,OAAO,EACPJ,MAAM,cAEN,kBAAC,KAAD,CAAOK,YAAY,6BAErB,kBAAC,KAAK7I,KAAN,iBACMlB,EAAQ6H,WADd,CAEEO,KAAK,SACL0B,OAAO,EACPJ,MAAM,WAEN,kBAAC,KAAD,CAAOK,YAAY,4BAErB,kBAAC,KAAK7I,KAAN,iBACMlB,EAAQ6H,WADd,CAEEO,KAAK,QACL0B,OAAO,EACPJ,MAAM,UAEN,kBAAC,KAAM6E,SAAP,CAAgBxE,YAAY,0BAE9B,kBAAC,KAAK7I,KAAN,KACE,kBAAC,IAAD,CACEoG,KAAK,UACL8C,SAAS,SACTD,MAAM,QACNlJ,MAAOjB,EAAQwN,QAJjB,YC7FKgB,GAFiB5C,IAAMC,gBC4DvB4C,OAzDf,YAA8C,IAAvBC,EAAsB,EAAtBA,mBAAsB,EAC3B1K,IAATa,EADoC,oBAErC8J,EAAWlC,qBAAW+B,IACtBxO,EAAU,CACd4O,SAAU/J,EAAQ,IAAM,UAAY,SAUtC,OACE,oCACG8J,EAASxB,KAAI,SAAAC,GAAO,OACnB,kBAAC,KAAD,CACEnM,MAAO,CAAEwE,aAAc,IACvB1B,UAAW,CAAEgB,WAAY,GACzB+F,UAAW,CAAEvH,aAAc,QAC3BsH,MAAOuC,EAAQhF,KACfnE,KAAMjE,EAAQ4O,UAEd,yBAAK3N,MAAO,CAAEkE,SAAU,eACtB,0BAAMlE,MAAO,CAAEyE,WAAY,MAA3B,YACA,0BAAMzE,MAAO,CAAE4N,UAAW,WAAazB,EAAQe,SAEjD,yBACElN,MAAO,CACL2E,UAAW,OACXT,SAAU,aACVI,UAAW,WAGb,0BAAMtE,MAAO,CAAEyE,WAAY,MAA3B,iBACC0H,EAAQiB,aAEX,6BACA,kBAAC,IAAD,CACE1G,GAAIyF,EAAQ9K,IACZrB,MAAO,CAAEf,gBAAiB,UAAWgK,OAAQ,QAC7CC,MAAM,QACN7C,KAAK,UACL1G,QAAS,WArCc,IAAC0G,EAAMc,EAuC5B,OAvCsBd,EAsCG,UAtCGc,EAsCQgF,EAAQhF,KArCtDgG,KAAa9G,GAAM,CACjBsC,QAAS,WACTyE,YAAY,yBAAD,OAA2BjG,EAA3B,OAoCIsG,EAAmBtB,EAAQ9K,OAPtC,c,uCC+EKwM,OArHf,YAA2C,IAAD,EAAlBC,EAAkB,EAAlBA,eAAkB,EACxB/K,IAATa,EADiC,oBAElC7E,GAAO,GACXyK,OAAQ,CACNP,OAAQ,OACR9J,MAAO,UACPE,SAAUuE,EAAQ,IAAM,OAAS,OACjCY,aAAc,GAEhBX,QAAS,CACP2C,QAAS,EACTzC,OAAQ,EACRwC,UAAW,SAEbwH,KAAM,CACJnK,MAAO,QAEToK,SAAU,CACRlK,WAAY,IAhBH,yBAkBF,CACPyC,UAAW3C,EAAQ,IAAM,OAAS,SAnBzB,sBAqBLA,EAAQ,IAAM,UAAY,SArBrB,sBAsBL,CACJ2C,UAAW,MAvBF,GAF2B,EA6BV/G,mBAAS,GA7BC,mBA6BjCyO,EA7BiC,KA6BxBC,EA7BwB,OA8BJ1O,mBAAS,IA9BL,mBA8BjC2O,EA9BiC,KA8BrBC,EA9BqB,KA8CxC,OAdA9C,qBAAU,WACR,IAAM/J,EAAWuM,EAAe3G,KAAKkH,OACrC1M,EAAiBJ,GAAUmG,MAAK,SAAAC,GAC9B,IAAM2G,EAAS3G,EAAIvG,KAAK,GAClBmN,EAAW5G,EAAIvG,KAAK,GAC1BgN,EAAcE,GACd1M,QAAQC,IAAI0M,GACZ,IAAMrE,EAAQsE,KAAKC,MAChBF,EAASG,aAAeH,EAASI,YAAe,KAEnCT,EAANU,MAAV1E,EAA2B,EAAgBA,QAE5C,CAAC4D,IAGF,yBAAK9N,MAAOjB,EAAQ8E,SAClB,6BACE,0BAAM7D,MAAO,CAAEyE,WAAY,SAA3B,YACA,0BAAMzE,MAAO,CAAE4N,UAAW,WAAaE,EAAeZ,SAExD,yBAAKlN,MAAO,CAAE2E,UAAW,OAAQL,UAAW,WAC1C,0BAAMtE,MAAO,CAAEyE,WAAY,SAA3B,iBACA,0BAAMzE,MAAO,CAAE4N,UAAW,WACvBE,EAAeV,cAGpB,yBACEpN,MAAO,CACLkE,SAAU,aACVI,UAAW,OACXrF,gBAAiB,UACjB2E,MAAO,SAMT,wBAAI5D,MAAO,CAAE8D,WAAY,WAAzB,UACA,kBAAC,KAAD,CACE+K,WAAW,aACX7O,MAAOjB,EAAQ+P,KACfC,OAAO,EACPC,WAAYb,EACZc,WAAY,SAAA/P,GACV,IAAMgQ,EAA2B,SAAfhQ,EAAKiQ,MAAmB,UAAY,UACtD,OACE,kBAAC,KAAKlP,KAAN,CACED,MAAO,CACL2E,UAAW,OACXP,WAAY,SAGd,kBAACgL,GAAA,EAAD,CACEpP,MAAO,CACLb,MAAO+P,EACP7P,SAAU,QACVgF,YAAa,KAGhBnF,EAAK0K,WAMhB,6BACA,kBAAC,KAAD,CAAUhG,MAAO,GAAIyC,KAAK,SAAS4H,QAASA,IAC5C,6BACA,6BACA,kBAAC,IAAD,CACE5H,KAAK,UACL6C,MAAM,QACNvJ,QAAS,kBACPyD,OAAOiM,KAAP,yCACoCvB,EAAe3G,MACjD,YANN,qBCvGSmI,GAFK3E,IAAMC,gBCYlBnH,GAAoBC,IAApBD,QAAoBC,IAAX6L,OA6HFC,OA3Hf,WAAgC,IAAD,EACbzM,IAATa,EADsB,oBAEvB7E,EAAU,CACd0Q,OAAQ,CACNC,OAAQ9L,EAAQ,IAAM,OAAS,QAEjC4F,OAAQ,CACNvK,gBAAiB,WAEnB4E,QAAS,CACPE,OAAQH,EAAQ,IAAM,OAAS,OAEjC+L,WAAY,CACVnJ,QAAS,GACTD,UAAW,IACXtH,gBAAiB,SAEnB0O,SAAU/J,EAAQ,IAAM,UAAY,SAjBT,EAmBHpE,mBAAS,WAnBN,mBAmBtBoK,EAnBsB,KAmBfgG,EAnBe,OAoBqBpQ,mBAAS,IApB9B,mBAoBtBqQ,EApBsB,KAoBHC,EApBG,OAqBiBtQ,mBAAS,IArB1B,mBAqBtBuQ,EArBsB,KAqBLC,EArBK,OAsBexQ,mBAAS,IAtBxB,mBAsBtBsO,EAtBsB,KAsBNmC,EAtBM,KAuBvBzR,EAAOgN,qBAAW8D,IAGxBhE,qBAAU,WACR3J,IAA2B+F,MAAK,SAAAC,GAC9B,IAAMuI,EAAkBvI,EAAIvG,KAAK8K,KAC/B,YACE,MAAO,CACL7K,IAFoC,EAArCA,IAGC8F,KAHoC,EAAhCA,KAIJiG,YAJoC,EAA1BA,YAKVF,OALoC,EAAbA,WAU7B,OADA4C,EAAqBI,GACdvI,EAAIvG,UAEZ,CAAC2O,IAEJzE,qBAAU,WAER3J,IAAc+F,MAAK,SAAAC,GACjB,IAAM4D,EAAiB5D,EAAIvG,KAAKsM,SAASxB,KACvC,YACE,MAAO,CACL7K,IAFoC,EAArCA,IAGC8F,KAHoC,EAAhCA,KAIJiG,YAJoC,EAA1BA,YAKVF,OALoC,EAAbA,WAS7B8C,EAAmBzE,QAEpB,IAEH,IAaMkC,EAAqB,SAAA/G,GACzB/E,EAAgB,CAAEwO,OAAQ3R,EAAK6C,IAAK+O,UAAW1J,IAC5CgB,MAAK,SAAAC,GACJqI,EAAmB,GAAD,oBAAKD,GAAL,CAAsBpI,EAAIvG,WAE7C8G,OAAM,SAAAmF,GACLzL,QAAQC,IAAIwL,OAgBlB,OACE,oCACE,kBAAC,GAAwBgD,SAAzB,CAAkCnG,MAAO2F,GACvC,kBAAC,GAAqBQ,SAAtB,CAA+BnG,MAAO6F,GACpC,kBAAC,EAAD,CAAQhO,cAAc,SACtB,kBAAC,IAAD,KACE,kBAAC,GAAD,CACEkJ,eA1CW,SAAArB,GACrBgG,EAAShG,IA0CCsB,sBAvCkB,SAAAxE,GAC5BqJ,EAAgBO,SAAQ,SAAAnE,GAClBA,EAAQ9K,MAAQqF,IAClBuJ,EAAkB9D,GAClByD,EAASzD,EAAQhF,aAqCb,kBAAC,IAAD,CAAQnH,MAAOjB,EAAQ0Q,QACrB,kBAAC,GAAD,CAASzP,MAAOjB,EAAQ8E,SACtB,kBAAC,KAAD,CACE+F,MAAOA,EACPC,UAAW9K,EAAQyK,OACnBxG,KAAMjE,EAAQ4O,UA3BR,WACpB,OAAQ/D,GACN,IAAK,UACH,OAAO,kBAAC,GAAD,MACT,IAAK,qBACH,OAAO,kBAAC,GAAD,CAAY6D,mBAAoBA,IACzC,KAAKK,EAAe3G,KAClB,OAAO,kBAAC,GAAD,CAAgB2G,eAAgBA,IACzC,QACE,OAAO,+BAoBIyC,W,6BC5HJC,GAFe7F,IAAMC,gBCS5BC,GAAUnH,IAAVmH,MACAC,GAAYC,IAAZD,QAqFO2F,OAnFf,YAAqE,IAA1CxF,EAAyC,EAAzCA,eAAgBC,EAAyB,EAAzBA,sBAAyB,EAC1CnI,IAD0C,mBAC3Da,EAD2D,aAEhCpE,oBAAS,IAFuB,mBAE3D2L,EAF2D,KAEhDC,EAFgD,KAI5DrM,EAAU,CACdgI,iBAAkB,CAChB3C,WAAYR,EAAQ,KAAO,GAAK,GAElCyH,WAAY,CACVvH,WAAYF,EAAQ,IAAM,MAAQ,SAItC0H,qBAAU,WACMF,EAAdxH,EAAQ,OACP,CAACA,IAEJ,IAAM8J,EAAWlC,qBAAWgF,IAY5B,OACE,kBAAC,GAAD,CACE/E,MAAM,QACNN,UAAWA,EACXnI,KAAK,QACL0I,eAAe,OACf1L,MAAO,CACL2L,SAAU,OACVC,YAAa,oBACb8E,OAAO,IAGT,kBAAC,IAAD,CACE7E,oBAAqB,CAAC,KACtB9L,KAAK,SACLC,MAAOjB,EAAQsM,YAEf,kBAAC,IAAKpL,KAAN,CACEN,QAAS,kBAAMsL,EAAe,6BAC9BpL,IAAI,IACJG,MAAO,CAAE2F,YAAa,QACtBmG,KAAM,kBAACC,GAAA,EAAD,OAJR,qBAQA,kBAAC,IAAK9L,KAAN,CACEN,QAAS,kBAAMsL,EAAe,uBAC9BpL,IAAI,IACJG,MAAO,CAAE2F,YAAa,QACtBmG,KAAM,kBAACE,GAAA,EAAD,OAJR,sBAQA,kBAAC,GAAD,CACEnM,IAAI,OACJiM,KAAM,kBAAC6E,GAAA,EAAD,MACN/G,MAAM,mBACN5J,MAAOjB,EAAQgI,kBA9Cd2G,EAASxB,KAAI,SAAAC,GAAO,OACzB,kBAAC,IAAKlM,KAAN,CACEJ,IAAKsM,EAAQ9K,IACb1B,QAAS,kBAAMuL,EAAsBiB,EAAQ9K,OAE5C8K,EAAQhF,UA6CT,kBAAC,IAAKlH,KAAN,CACEN,QAAS,kBAAMsL,EAAe,aAC9BpL,IAAI,IACJiM,KAAM,kBAACM,GAAA,EAAD,MACNpM,MAAO,CAAE2F,YAAa,SAJxB,eCVO6H,OAtEf,YAA4D,IAArClG,EAAoC,EAApCA,SAAUJ,EAA0B,EAA1BA,KAAM0J,EAAoB,EAApBA,iBAAoB,EACjC7N,IADiC,mBAClDa,EADkD,KAEnD7E,GAFmD,KAEzC,CACd6H,WAAY,CACVC,SAAU,CACRjC,KAAM,GAERkC,WAAY,CACVlC,KAAM,KAGViM,SAAUjN,EAAQ,IAAM,UAAY,QACpCC,QAAS,CACP0C,UAAW3C,EAAQ,IAAM,OAAS,QAEpC2I,OAAQ,CACNtN,gBAAiB,UACjBgK,OAAQ,UAIZ,OACE,yBAAKjJ,MAAOjB,EAAQ8E,SAClB,kBAAC,KAAD,CAAMyD,SAAUA,EAAUJ,KAAMA,GAC9B,kBAAC,KAAKjH,KAAN,iBACMlB,EAAQ6H,WADd,CAEEiC,OAAO,EACPJ,MAAM,OACNtB,KAAK,OACLuB,MAAO,CACL,CAAEE,UAAU,EAAMD,QAAS,iCAC3B,CAAEqB,UAAW4G,MAGf,kBAAC,KAAD,CAAO9H,YAAY,oCAErB,kBAAC,KAAK7I,KAAN,iBACMlB,EAAQ6H,WADd,CAEEiC,OAAO,EACPJ,MAAM,cACNtB,KAAK,cACLuB,MAAO,CACL,CAAEE,UAAU,EAAMD,QAAS,2CAG7B,kBAAC,KAAM2E,SAAP,CAAgBxE,YAAY,sCAE9B,kBAAC,KAAK7I,KAAN,iBACMlB,EAAQ6H,WADd,CAEEiC,OAAO,EACPJ,MAAM,kBACNtB,KAAK,WAEL,kBAAC,KAAD,CAAO2B,YAAY,sDAErB,kBAAC,KAAK7I,KAAN,KACE,kBAAC,IAAD,CACEoG,KAAK,UACL6C,MAAM,QACNlJ,MAAOjB,EAAQwN,OACfpD,SAAS,UAJX,c,UC6CK2H,OApGf,WAA8B,IAAD,EACZrE,KAAKxF,UAAbC,EADoB,sBAEXnE,IACVhE,EAAU,CACd6H,WAAY,CACVC,SAAU,CACRjC,KAAM,GAERkC,WAAY,CACVlC,KAAM,KAGV0H,UAAW,CACT3H,UAAW,QAEb4H,OAAQ,CACN3H,KAAM,GACN4H,MAAO,SACPvN,gBAAiB,UACjBgK,OAAQ,QAEVpF,QAAS,CACP0C,UAtBuB,oBAsBJ,IAAM,OAAS,SAgCtC,OAXA+E,qBAAU,WACR3J,IAAc+F,MAAK,SAAAC,GACbA,EAAIvG,KAAK2P,kBACX7J,EAAKyF,eAAe,CAAEtG,KAAMsB,EAAIvG,KAAK2P,mBACnCpJ,EAAIvG,KAAK4P,kBACX9J,EAAKyF,eAAe,CAAExF,KAAMQ,EAAIvG,KAAK4P,mBACnCrJ,EAAIvG,KAAK6P,mBACX/J,EAAKyF,eAAe,CAAEK,MAAOrF,EAAIvG,KAAK6P,yBAEzC,IAGD,yBAAKjR,MAAOjB,EAAQ8E,SAClB,kBAAC,KAAD,CAAMyD,SAxBO,SAAAC,GACf5F,EAAkB4F,GACfG,MAAK,SAAAC,GATe,IAAAtB,EAWnB,OAXmBA,EAUF,UATrB8G,KAAa9G,GAAM,CACjBsC,QAAS,4BACTyE,YAAa,6DAQJzF,EAAIvG,QAEZ8G,OAAM,SAAAmF,GACLzL,QAAQC,IAAIwL,OAiBYnG,KAAMA,GAC9B,kBAAC,KAAKjH,KAAN,iBACMlB,EAAQ6H,WADd,CAEE5G,MAAOjB,EAAQuN,UACfzD,OAAO,EACP1B,KAAK,OACLsB,MAAM,SAEN,kBAAC,WAAMyI,MAAP,KACE,kBAAC,WAAMC,OAAP,CAAcjH,MAAM,cAApB,cACA,kBAAC,WAAMiH,OAAP,CAAcjH,MAAM,YAApB,cAGJ,kBAAC,KAAKjK,KAAN,iBACMlB,EAAQ6H,WADd,CAEEiC,OAAO,EACPJ,MAAM,OACNtB,KAAK,SAEL,kBAAC,KAAD,CAAO2B,YAAY,kCAErB,kBAAC,KAAK7I,KAAN,iBACMlB,EAAQ6H,WADd,CAEEiC,OAAO,EACPJ,MAAM,QACNtB,KAAK,UAEL,kBAAC,KAAMmG,SAAP,CAAgBxE,YAAY,4BAE9B,kBAAC,KAAK7I,KAAN,KACE,kBAAC,IAAD,CACEoG,KAAK,UACL8C,SAAS,SACTD,MAAM,QACNlJ,MAAOjB,EAAQwN,QAJjB,YCzEF9I,GAAYC,IAAZD,QACA6J,GAAa8D,KAAb9D,SAwOO+D,OAtOf,YAA8C,IAAD,EAAlBvD,EAAkB,EAAlBA,eAAkB,EAC3B/K,IAATa,EADoC,oBAErC7E,GAAO,GACXwK,QAAS,GACTC,OAAQ,CACNP,OAAQ,OACR9J,MAAO,UACPE,SAAUuE,EAAQ,IAAM,OAAS,OACjCY,aAAc,GAEhBX,QAAS,CACP2C,QAAS,EACTzC,OAAQ,EACRwC,UAAW,SAEbwH,KAAM,CACJnK,MAAO,OACPU,UAAW,MAEb0J,SAAU,CACRlK,WAAY,IAlBH,yBAoBF,CACPyC,UAAW3C,EAAQ,IAAM,OAAS,SArBzB,sBAuBLA,EAAQ,IAAM,UAAY,SAvBrB,sBAwBL,CACJ2C,UAAW,MAzBF,GAF8B,EA+B5BS,KAAQC,UAAhBC,EA/BoC,sBAgCP1H,mBAAS,IAhCF,mBAgCpC2O,EAhCoC,KAgCxBC,EAhCwB,OAiCb5O,mBAAS,GAjCI,mBAiCpCyO,EAjCoC,KAiC3BC,EAjC2B,KA+E3C,OA5CA5C,qBAAU,WACR,IAAM/J,EAAWuM,EAAe3G,KAAKkH,OACrC1M,EAAiBJ,GAAUmG,MAAK,SAAAC,GAC9B,IAAM2G,EAAS3G,EAAIvG,KAAK,GAClBmN,EAAW5G,EAAIvG,KAAK,GAC1BgN,EAAcE,GACd1M,QAAQC,IAAI0M,GACZ,IAAMrE,EAAQsE,KAAKC,MAChBF,EAASG,aAAeH,EAASI,YAAe,KAEnCT,EAANU,MAAV1E,EAA2B,EAAgBA,QAE5C,CAAC4D,IAiCF,yBAAK9N,MAAOjB,EAAQ8E,SAClB,kBAAC,GAAD,CAAS7D,MAAOjB,EAAQ8E,SACtB,kBAAC,IAAD,CAAKuC,QAAQ,UACX,kBAAC,IAAD,CAAKP,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,kBAAC,KAAD,CACEjD,KAAMjE,EAAQiE,KACd4G,MAAM,kBACNC,UAAW9K,EAAQyK,OACnBxJ,MAAOjB,EAAQgP,KACfjL,UAAW/D,EAAQiP,UAEnB,6BACE,qDACA,kBAAC,KAAD,CACEhL,KAAMjE,EAAQiE,KACdkE,KAAMA,EACNC,KAAK,aACLC,cAAe,CAAEwC,MAAO,GAAI0H,KAAM,IAClChK,SA1CC,SAAAC,GAAW,IAClBqC,EAAgBrC,EAAhBqC,MAAO0H,EAAS/J,EAAT+J,KACf3P,EAAa,CAAEJ,SAAUuM,EAAe3G,KAAMyC,QAAO0H,SAAQ5J,MAAK,SAAAC,GAT3C,IAAAtB,EAUrBa,EAAKU,cAVgBvB,EAWJ,UAVnB8G,KAAa9G,GAAM,CACjBsC,QAAS,gBACTyE,YAAa,uDASbgB,EAAc,CACZ,CAAExE,MAAOA,EAAO0H,KAAMA,EAAMnC,MAAO,SADxB,oBAERhB,SAoCO5F,eAxBO,SAAAC,GACrB5G,QAAQC,IAAI,UAAW2G,KAyBT,kBAAC,KAAQvI,KAAT,CAEEwI,MAAM,QACNC,MAAO,CACL,CACEE,UAAU,EACVD,QAAS,kCAGbE,OAAO,EACP1B,KAAK,SAEL,kBAAC,KAAD,OAEF,kBAAC,KAAQlH,KAAT,CAEEwI,MAAM,cACNC,MAAO,CACL,CACEE,UAAU,EACVD,QAAS,wCAGbE,OAAO,EACP1B,KAAK,QAEL,kBAACmG,GAAD,CAAUiE,KAAM,KAElB,kBAAC,KAAQtR,KAAT,KACE,kBAAC,IAAD,CAAQoG,KAAK,UAAU6C,MAAM,QAAQC,SAAS,UAA9C,sBAIF,uBACEnJ,MAAO,CACLb,MAAO,MACP2E,WAAYF,EAAQ,IAAM,OAAS,IAHvC,uGASA,kBAAC,IAAD,CACEyC,KAAK,UACL6C,MAAM,QACNsI,QAAM,EACN7R,QA/ED,WACfgC,EAAkB,CAChBL,KAAMwM,EAAe3G,KACrB9F,IAAKyM,EAAezM,MACnBqG,MAAK,kBAAMtE,OAAO4E,SAASC,cAuEhB,sBAaR,kBAAC,IAAD,CAAK5F,UAAU,aAAawD,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC5D,kBAAC,IAAD,CAAKJ,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,kBAAC,KAAD,CACEjD,KAAMjE,EAAQiE,KACd4G,MAAM,iBACNC,UAAW9K,EAAQyK,OACnBxJ,MAAOjB,EAAQgP,KACfjL,UAAW/D,EAAQiP,UAEnB,yBACEhO,MAAO,CACLkE,SAAU,aACVI,UAAW,OACXrF,gBAAiB,UACjB2E,MAAO,SAMT,wBAAI5D,MAAO,CAAE8D,WAAY,WAAzB,UACA,kBAAC,KAAD,CACE9D,MAAOjB,EAAQ+P,KACfD,WAAW,aACXE,OAAO,EACPC,WAAYb,EACZc,WAAY,SAAA/P,GACV,IAAMgQ,EACW,SAAfhQ,EAAKiQ,MAAmB,UAAY,UACtC,OACE,kBAAC,KAAKlP,KAAN,CACED,MAAO,CACL2E,UAAW,OACXP,WAAY,SAGd,kBAACgL,GAAA,EAAD,CACEpP,MAAO,CACLb,MAAO+P,EACP7P,SAAU,QACVgF,YAAa,KAGhBnF,EAAK0K,WAMhB,6BACA,kBAAC,KAAD,CAAUhG,MAAO,GAAIyC,KAAK,SAAS4H,QAASA,IAC5C,6BACA,6BACA,kBAAC,IAAD,CACEjL,KAAMY,EAAQ,IAAM,UAAY,QAChCyC,KAAK,UACL6C,MAAM,QACNvJ,QAAS,kBACPyD,OAAOiM,KAAP,yCACoCvB,EAAe3G,MACjD,YAPN,yBCtNN1D,GAAoBC,IAApBD,QAAoBC,IAAX6L,OAuIFkC,OArIf,WAA8B,IAAD,EACX1O,IAATa,EADoB,oBAErB7E,EAAU,CACd0Q,OAAQ,CACNC,OAAQ9L,EAAQ,IAAM,OAAS,QAEjC4F,OAAQ,CACNvK,gBAAiB,QACjB+F,aAAc,OACd1C,aAAc,QAEhBuB,QAAS,CACPE,OAAQH,EAAQ,IAAM,OAAS,OAEjC+L,WAAY,CACVnJ,QAAS,GACTD,UAAW,IACXtH,gBAAiB,SAEnB0O,SAAU/J,EAAQ,IAAM,UAAY,SAnBX,EAsBZ6I,KAAKxF,UAAbC,EAtBoB,sBAuBD1H,mBAAS,4BAvBR,mBAuBpBoK,EAvBoB,KAuBbgG,EAvBa,QAwBdpE,qBAAW8D,IACQ9P,mBAAS,KAzBd,mBAyBpBkO,EAzBoB,KAyBVgE,EAzBU,OA0BiBlS,mBAAS,IA1B1B,mBA0BpBsO,EA1BoB,KA0BJmC,EA1BI,KAmCrB3I,EAAW,SAAAC,GAAW,IAEpBoK,EADWpK,EAATJ,KACkByK,QAAQ,OAAQ,IAC1CjQ,EAAA,6BAAuB4F,GAAvB,IAA+BJ,KAAMwK,KAAgBjK,MAAK,SAAAC,GAVnC,IAAAtB,EAcrB,OAdqBA,EAWJ,UAVnB8G,KAAa9G,GAAM,CACjBsC,QAAS,cACTyE,YAAa,iDASblG,EAAKU,cACL8J,EAAY,GAAD,oBAAKhE,GAAL,CAAe/F,EAAIvG,QACvBuG,MAILiJ,EAAmB,SAAC3G,EAAMC,GAAW,IAAD,iBACpBwD,GADoB,IACxC,2BAA8B,CAC5B,GAD4B,QAChBvG,OAAS+C,EACnB,OAAOE,QAAQE,OAAO,qCAHc,8BAKxC,OAAOF,QAAQC,WAuDjB,OA/CAiB,qBAAU,WACR3J,IAAc+F,MAAK,SAAAC,GACjB,IAAMkK,EAAelK,EAAIvG,KAAKsM,SAASxB,KACrC,YACE,MAAO,CACL7K,IAF0C,EAA3CA,IAGC8F,KAH0C,EAAtCA,KAIJiG,YAJ0C,EAAhCA,YAKVF,OAL0C,EAAnBA,OAMvB4E,KAN0C,EAAXA,SAUrCJ,EAAYG,QAEb,IAiCD,oCACE,kBAAC,GAAsBxB,SAAvB,CAAgCnG,MAAOwD,GACrC,kBAAC,EAAD,CAAQ3L,cAAc,SACtB,kBAAC,IAAD,CAAQ/B,MAAOjB,EAAQ0Q,QACrB,kBAAC,GAAD,CACExE,eA1Da,SAAArB,GACrBgG,EAAShG,IA0DDsB,sBArCoB,SAAAxE,GAC5BgH,EAAS4C,SAAQ,SAAAnE,GACXA,EAAQ9K,MAAQqF,IAClBuJ,EAAkB9D,GAClByD,EAASzD,EAAQhF,aAmCf,kBAAC,IAAD,KACE,kBAAC,GAAD,CAASnH,MAAOjB,EAAQ8E,SACtB,kBAAC,KAAD,CACEb,KAAMjE,EAAQ4O,SACd/D,MAAOA,EACPC,UAAW9K,EAAQyK,OACnBxJ,MAAO,CAAEgF,aAAc,SApCf,WACpB,OAAQ4E,GACN,IAAK,2BACH,OAAO,kBAAC,GAAD,MACT,IAAK,qBACH,OACE,kBAAC,GAAD,CACEgH,iBAAkBA,EAClBtJ,SAAUA,EACVJ,KAAMA,IAGZ,IAAK,WACH,OAAO,8BACT,KAAK4G,EAAe3G,KAClB,OAAO,kBAAC,GAAD,CAAgB2G,eAAgBA,IACzC,QACE,OAAO,+BAqBEyC,UC3GFwB,OA5Bf,WAA2B,IAAD,EACQvS,qBADR,mBACjBwS,EADiB,KACPC,EADO,OAEAzS,mBAAS,IAFT,mBAEjBhB,EAFiB,KAEX0T,EAFW,KAmBxB,OAhBA5G,qBAAU,WACR3J,IAAc+F,MAAK,SAAAC,GACjBsK,EAAYtK,EAAIvG,KAAKqG,MACrByK,EAAQvK,EAAIvG,WAEb,IAYD,oCACE,kBAAC,GAAYiP,SAAb,CAAsBnG,MAAO1L,GAZT,WACtB,OAAQwT,GACN,IAAK,YACH,OAAO,kBAAC,GAAD,MACT,IAAK,UACH,OAAO,kBAAC,GAAD,MACT,QACE,OAAO,+BAMNG,MCtBD1O,GAAYC,IAAZD,QAEFgM,GAAS,CACb5I,SAAU,CACRjC,KAAM,GAERkC,WAAY,CACVlC,KAAM,KAGJwN,GAAa,CACjBtL,WAAY,CACVzG,OAAQ,EACRuE,KAAM,KAiHKyN,GAtGQ,WAAO,IAAD,EACZrL,KAAQC,UAAhBC,EADoB,sBAEHnE,IAFG,mBAEpBa,EAFoB,KAIrB7E,GAJqB,KAIX,CACdyK,OAAQ,CACNP,OAAQ,OACR9J,MAAO,UACPE,SAAUuE,EAAQ,IAAM,GAAK,IAE/B0O,SAAU,CACR9N,aAAc,QAEhBX,QAAS,CACPC,WAAYF,EAAQ,IAAM,GAAK,GAC/BG,OAAQ,EACRwC,UAAW3C,EAAQ,IAAM,OAAS,OAClC3E,gBAAiB,WAEnB8O,KAAM,CACJnK,MAAO,OACPQ,WAAY,OACZI,aAAcZ,EAAQ,IAAM,KAAO,KACnCU,UAAW,MACX2E,OAAQ,oBACRjE,aAAc,UAsBlB,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,GAAD,CAAShF,MAAOjB,EAAQ8E,SACtB,kBAAC,IAAD,CAAKuC,QAAQ,UACX,kBAAC,IAAD,CAAKP,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,kBAAC,KAAD,CACEjD,KAAMY,EAAQ,IAAM,UAAY,QAChCgG,MAAM,iBACNC,UAAW9K,EAAQyK,OACnBxJ,MAAOjB,EAAQgP,MAEf,6BACE,wBAAI/N,MAAOjB,EAAQuT,UAAnB,8FAKF,kBAAC,KAAD,iBACM7C,GADN,CAEEtI,KAAK,QACLG,SAlCG,SAAAC,GACf3F,QAAQC,IAAI,WAAY0F,GACxB5F,EAAuB4F,GAAQG,MAAK,SAAAC,GA3Cf,IAAAtB,EA8CnB,OA9CmBA,EA4CF,UA3CrB8G,KAAa9G,GAAM,CACjBsC,QAAS,cACTyE,YAAa,wDA0CXlG,EAAKU,cACED,MA8BGY,eA1BS,SAAAC,GACrB5G,QAAQC,IAAI,UAAW2G,MA2BX,kBAAC,KAAQvI,KAAT,CACEwI,MAAM,QACNtB,KAAK,QACLuB,MAAO,CACL,CACEE,UAAU,EACVD,QAAS,8BAIb,kBAAC,KAAD,CAAOG,YAAY,yBAErB,kBAAC,KAAQ7I,KAASmS,GAChB,kBAAC,IAAD,CACE/L,KAAK,UACL8C,SAAS,SACTD,MAAM,QACNlJ,MAAO,CAAEf,gBAAiB,UAAWgK,OAAQ,SAJ/C,0BC1GVxF,GAAYC,IAAZD,QAEFgM,GAAS,CACb5I,SAAU,CACRjC,KAAM,GAERkC,WAAY,CACVlC,KAAM,KAGJwN,GAAa,CACjBtL,WAAY,CACVzG,OAAQ,EACRuE,KAAM,KAwJK2N,GA7IO,WAAO,IAAD,EACXvL,KAAQC,UAAhBC,EADmB,sBAEFnE,IAFE,mBAEnBa,EAFmB,aAGMpE,oBAAS,IAHf,mBAGnBgT,EAHmB,KAGTC,EAHS,KAKpB1T,EAAU,CACdyK,OAAQ,CACNP,OAAQ,OACR9J,MAAO,UACPE,SAAUuE,EAAQ,IAAM,GAAK,IAE/B0O,SAAU,CACR9N,aAAc,QAEhBX,QAAS,CACPC,WAAYF,EAAQ,IAAM,GAAK,GAC/BG,OAAQ,EACRwC,UAAW,OACXtH,gBAAiB,WAEnB8O,KAAM,CACJnK,MAAO,OACPQ,WAAY,OACZI,aAAcZ,EAAQ,IAAM,KAAO,KACnCU,UAAWV,EAAQ,IAAM,MAAQ,KACjCqF,OAAQ,oBACRjE,aAAc,SAQZsC,EAAW,SAAAC,GACf3F,QAAQC,IAAI,WAAY0F,GACxB5F,EAAkB4F,GAAQG,MAAK,SAAAC,GA3CV,IAAAtB,EA+CnB,OA/CmBA,EA4CF,UA3CrB8G,KAAa9G,GAAM,CACjBsC,QAAS,cACTyE,YAAa,iDA0CXlG,EAAKU,cACL6K,GAAY,GACL9K,MASH+K,EAAaC,cAAbD,SAGR,OAAIF,EACK,kBAAC,IAAD,CAAU1T,GAAG,WAIpB,oCACE,kBAAC,EAAD,MACA,kBAAC,GAAD,CAASkB,MAAOjB,EAAQ8E,SACtB,kBAAC,IAAD,CAAKuC,QAAQ,UACX,kBAAC,IAAD,CAAKP,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,kBAAC,KAAD,CACEjD,KAAMY,EAAQ,IAAM,UAAY,QAChCsF,MAAM,QACNU,MAAM,iBACNC,UAAW9K,EAAQyK,OACnBxJ,MAAOjB,EAAQgP,MAEf,6BACE,wBAAI/N,MAAOjB,EAAQuT,UAAnB,2CAIF,kBAAC,KAAD,iBACM7C,GADN,CAEEtI,KAAK,QACLG,SAAU,SAAAC,GAAM,OACdD,EAAS,6BACJC,GADG,IAEN7G,MAAOgS,EAAS3D,MAAM,WAAW6D,UAGrCrK,eAvCS,SAAAC,GACrB5G,QAAQC,IAAI,UAAW2G,MAwCX,kBAAC,KAAQvI,KAAT,CACEkH,KAAK,WACLsB,MAAM,WACNC,MAAO,CACL,CACEE,UAAU,EACVD,QAAS,gCAGbkK,aAAW,GAEX,kBAAC,KAAM9J,SAAP,OAEF,kBAAC,KAAQ9I,KAAT,CACEkH,KAAK,UACLsB,MAAM,mBACNqK,aAAc,CAAC,YACfD,aAAW,EACXnK,MAAO,CACL,CACEE,UAAU,EACVD,QAAS,iCAEX,gBAAGoK,EAAH,EAAGA,cAAH,MAAwB,CACtB/I,UADsB,SACXC,EAAMC,GACf,OAAKA,GAAS6I,EAAc,cAAgB7I,EAGrCE,QAAQE,OACb,oDAHOF,QAAQC,eASvB,kBAAC,KAAMtB,SAAP,OAEF,kBAAC,KAAQ9I,KAASmS,GAChB,kBAAC,IAAD,CACE/L,KAAK,UACL8C,SAAS,SACTD,MAAM,QACNlJ,MAAO,CAAEf,gBAAiB,UAAWgK,OAAQ,SAJ/C,0BC7GH+J,OAlCf,WACE,OACE,yBAAK3Q,UAAU,OAGb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4Q,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,iBAChB,kBAAC,GAAD,OAEF,kBAAC,EAAD,CACED,OAAK,EACLC,KAAK,kBACL5U,UAAWyT,SCzBHoB,QACW,cAA7B/P,OAAO4E,SAASoL,UAEe,UAA7BhQ,OAAO4E,SAASoL,UAEhBhQ,OAAO4E,SAASoL,SAASC,MACvB,2DCXNC,IAAS1U,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEF2U,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjM,MAAK,SAAAkM,GACJA,EAAaC,gBAEd3L,OAAM,SAAA4L,GACLlS,QAAQkS,MAAMA,EAAMnL,c","file":"static/js/main.fd9410ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.9d99dfc3.png\";","module.exports = __webpack_public_path__ + \"static/media/people.ead67daa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/people1.b8b6a250.jpg\";","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n// import { useAuth } from './auth'\n// import AuthFailedPage from '../pages/AuthFailedPage'\n\nfunction ProtectedRoute ({ component: Component, user, ...rest }) {\n  // function ProtectedRoute (props) {\n  //   // const isAuthenticated = useAuth()\n  //  const { component: Component, path} = props\n  const isAuthenticated = localStorage.getItem('tokens')\n  return (\n    // <Route exact path={path}>\n    //    {props =>\n    //     isAuthenticated !== null ? (\n    //       <Component {...props} />\n    //     ) : (\n    //       <Redirect to='/login' />\n    //     )\n    //   }\n    // </Route>\n    <Route\n      {...rest}\n      render={props =>\n        isAuthenticated !== null ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to='/login' />\n        )\n      }\n    />\n  )\n}\n\nexport default ProtectedRoute\n","// Import React dependencies\nimport React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n// Import Menu and SubMenu components from ant design\nimport { Menu } from 'antd'\nimport { Link as ScrollLink } from 'react-scroll'\n\nconst styling = {\n  menu: {\n    backgroundColor: '#353452'\n  },\n  item: {\n    color: '#ffffff',\n    fontFamily: 'Poppins',\n    fontSize: '1rem'\n  }\n}\n\n// Right Menu component\nfunction MainMenu (props) {\n  const { order } = props\n  const [current, setCurrent] = useState('mail')\n\n  const handleClick = e => {\n    // console.log('click ', e)\n    setCurrent({ current: e.key })\n  }\n\n  // Function to scroll to the top of the page when called\n  // calling react-scroll method\n\n\n  return (\n    <Menu\n      onClick={handleClick}\n      selectedKeys={[current]}\n      mode={order}\n      style={styling.menu}\n    >\n      <Menu.Item key='volunteers'>\n        <ScrollLink\n          to='/volunteer'\n          style={styling.item}\n          activeClass='active'\n          spy={true}\n          smooth={true}\n          offset={-70}\n          duration={500}\n        >\n          Volunteers\n        </ScrollLink>\n      </Menu.Item>\n      <Menu.Item key='partners'>\n        <ScrollLink\n          to='/partner'\n          style={styling.item}\n          activeClass='active'\n          spy={true}\n          smooth={true}\n          offset={-70}\n          duration={500}\n        >\n          Partners\n        </ScrollLink>\n      </Menu.Item>\n      <Menu.Item key='signup'>\n        <Link to='/signup' style={styling.item}>\n          Sign Up\n        </Link>\n      </Menu.Item>\n      <Menu.Item key='login'>\n        <Link to='/login' style={styling.item}>\n          Log In\n        </Link>\n      </Menu.Item>\n    </Menu>\n  )\n}\nexport default MainMenu\n","import axios from 'axios'\n\nexport default {\n  resetPasswordEmail: function ({ email }) {\n    return axios.post('/v1/api/reset', { email })\n  },\n  resetPassword: function ({ token, password }) {\n    return axios.post(`/v1/api/reset/${token}`, { password })\n  },\n  getUser: function () {\n    return axios.get('/v1/api/users/')\n  },\n  updateVolunteer: function (volunteerData) {\n    return axios.put('/v1/api/users/volunteer', volunteerData)\n  },\n  updatePartner: function (partnerData) {\n    return axios.put('/v1/api/users/partner', partnerData)\n  },\n  logOut: function () {\n    localStorage.removeItem('tokens')\n    localStorage.removeItem('role')\n    return axios.delete('/v1/api/auth')\n  },\n\n  logIn: function (userCredentials) {\n    return axios.post('/v1/api/auth/users', userCredentials)\n  },\n\n  createUser: function (userCredentials) {\n    return axios.post('/v1/api/users', userCredentials)\n  },\n\n  createProject: function (projectData) {\n    return axios.post('/v1/api/projects', projectData)\n  },\n\n  getAvailableProjects: function () {\n    return axios.get('/v1/api/projects')\n  },\n\n  joinProject: function (projectData) {\n    return axios.put('/v1/api/projects', projectData)\n  },\n\n  deleteProject: function (data) {\n    return axios.delete(`/v1/api/projects/${data._id}?repo=${data.repo}`)\n  },\n\n  addIssue: function (projectData) {\n    return axios.post('/v1/api/projects/issues', projectData)\n  },\n\n  getAllIssues: function (repoName) {\n    return axios.get(`/v1/api/projects/issues/?repo=${repoName}`)\n  }\n}\n","// Import React dependencies\nimport React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n// Import Menu and SubMenu components from ant design\nimport { Menu } from 'antd'\nimport API from '../../utils/API'\n\nconst styling = {\n  menu: {\n    backgroundColor: '#353452'\n  },\n  item: {\n    color: '#ffffff',\n    fontFamily: 'Poppins',\n    fontSize: '1rem'\n  }\n}\n\n// Right Menu component\nfunction AuthMenu (props) {\n  const { order } = props\n  const [current, setCurrent] = useState('mail')\n\n  const handleClick = e => {\n    // console.log('click ', e)\n    setCurrent({ current: e.key })\n  }\n\n  const handleLogout = async () => {\n    try {\n      await API.logOut()\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  return (\n    <Menu onClick={handleClick} selectedKeys={[current]} mode={order}  style={styling.menu}>\n      <Menu.Item key='volunteers'>\n        <Link to='/' onClick={handleLogout} style={styling.item}>\n          Logout\n        </Link>\n      </Menu.Item>\n    </Menu>\n  )\n}\nexport default AuthMenu\n","import React, { useState } from 'react'\nimport MainMenu from '../MainMenu'\nimport AuthMenu from '../AuthMenu'\nimport { Drawer } from 'antd'\nimport { MenuOutlined } from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\nimport Logo from '../../resources/logo1.png'\nimport './style.css'\n\nfunction Navbar ({ authenticated }) {\n  //   const [current, setCurrent] = useState('mail')\n  const [visible, setVisible] = useState(false)\n\n  const styling = {\n    logo: {\n      maxHeight: '4.5rem'\n    },\n    drawer: {\n      backgroundColor: '#353452'\n    }\n  }\n\n  const showDrawer = () => {\n    setVisible(true)\n  }\n  const onClose = () => {\n    setVisible(false)\n  }\n  return (\n    <nav\n      className='menuBar'\n      style={{\n        borderBottom: '1px solid #C4C4C4',\n        backgroundColor: '#353452',\n        color: '#ffffff'\n      }}\n    >\n      <div className='logo'>\n        <Link to='/'>\n          <img src={Logo} style={styling.logo} />\n        </Link>\n      </div>\n      <div className='menuCon'>\n        <div className='rightMenu' >\n          {authenticated ? (\n            <div>\n              <AuthMenu order='horizontal' />\n            </div>\n          ) : (\n            <div>\n              <MainMenu order='horizontal'/>\n            </div>\n          )}\n        </div>\n        <div className='barsMenu'>\n          <MenuOutlined onClick={showDrawer} />\n        </div>\n        <Drawer\n          placement='right'\n          closable={true}\n          onClose={onClose}\n          visible={visible}\n          keyboard={true}\n          bodyStyle={styling.drawer}\n        >\n          {authenticated ? (\n            <AuthMenu order='inline' />\n          ) : (\n            <MainMenu order='inline' />\n          )}\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\nexport default Navbar\n","import React, { useLayoutEffect, useState } from 'react'\n\nfunction useWindowSize () {\n  const [size, setSize] = useState([0, 0])\n  useLayoutEffect(() => {\n    function updateSize () {\n      setSize([window.innerWidth, window.innerHeight])\n    }\n    window.addEventListener('resize', updateSize)\n    updateSize()\n    return () => window.removeEventListener('resize', updateSize)\n  }, [])\n  return size\n}\n\nexport default useWindowSize\n","// Import React dependencies\nimport React from 'react'\nimport { Button, Layout, Row, Col, Divider } from 'antd'\nimport Navbar from '../../components/Navbar'\nimport useWindowSize from '../../utils/useWindowSize'\nimport PeopleImg from '../../resources/people.jpg'\nimport PeopleImg2 from '../../resources/people1.jpg'\nconst { Content } = Layout\n\n// Landing page\nfunction Landing() {\n  // Width width watching custom hook\n  const [width, height] = useWindowSize()\n  const styling = {\n    content: {\n      paddingTop: width > 990 ? 24 : 16,\n      margin: 0,\n      backgroundColor: '#ffffff'\n    },\n    content2: {\n      paddingTop: width > 990 ? 24 : 16,\n      margin: 0,\n      backgroundColor: '#ffffff'\n    },\n    container: {\n      wordWrap: 'break-word',\n      maxWidth: width > 991 ? '80vw' : '90vw',\n      marginLeft: width > 991 ? 'auto' : 'auto',\n      marginRight: width > 991 ? 'auto' : '0',\n      marginTop: width > 990 ? '3rem' : '1.5rem',\n      color: '#353452'\n    },\n    valueProp: {\n      fontFamily: 'Poppins',\n      fontSize: width > 990 ? '2.5em' : '2em',\n      marginRight: 'auto',\n      marginBottom: '0.5rem',\n      fontWeight: 600\n    },\n    detail: {\n      fontSize: '1.15rem',\n      textAlign: 'left',\n      marginRight: '5rem'\n    },\n    span: {\n      color: '#19A2C0'\n    },\n    subHeaders: {\n      fontSize: width > 990 ? '1.35rem' : '1.2em',\n      marginTop: width > 991 ? '0' : '1em'\n    },\n    subContent: {\n      fontSize: '1.05rem',\n      textAlign: 'center',\n      color: 'black',\n      marginLeft: 'auto',\n      marginRight: 'auto'\n    },\n    getStarted: {\n      borderRadius: '1rem',\n      backgroundColor: '#FD4F64',\n      color: '#ffffff'\n    },\n    groups: {\n      marginTop: width > 991 ? '8vh' : '5vh',\n      marginLeft: width > 991 ? 'auto' : 'auto',\n      marginRight: width > 991 ? 'auto' : 'auto'\n    },\n    people: {\n      width: width > 991 ? '25vw' : '50vw',\n      marginTop: width > 991 ? 0 : '2vh'\n    },\n    people2: {\n      marginTop: width > 991 ? '1vh' : '2vh',\n      marginBottom: width > 991 ? '1vh' : 0,\n      width: width > 991 ? '24vw' : '45vw'\n    },\n    container2: {\n      backgroundColor: '#ecf9fc',\n      wordWrap: 'break-word',\n      maxWidth: '100vw',\n      marginLeft: width > 991 ? 'auto' : '0',\n      marginRight: width > 991 ? 'auto' : '0',\n      marginTop: '0rem'\n    },\n    valueCreation: {\n      fontFamily: 'Poppins',\n      fontSize: width > 991 ? '2.5rem' : '1.15rem',\n      color: '#19A2C0',\n      marginTop: width > 991 ? '2rem' : '2vh',\n      marginLeft: width > 991 ? '0.5rem' : '0.01rem',\n      fontWeight: 600\n    },\n    vogi: {\n      fontSize: width > 991 ? '1.25rem' : '1.25rem',\n      paddingRight: '2vw',\n      color: 'black',\n      marginTop: width > 991 ? '2rem' : '0.5rem'\n    },\n    volunteer: {\n      width: width > 991 ? '75vw' : '100vw',\n      marginLeft: width > 991 ? 'auto' : '0',\n      marginRight: width > 991 ? 'auto' : '0',\n      color: '#353452'\n    },\n    partner: {\n      width: width > 991 ? '75vw' : '100vw',\n      marginLeft: width > 991 ? 'auto' : '0',\n      marginRight: width > 991 ? 'auto' : '0',\n      color: '#353452'\n    },\n    groupDescription: {\n      paddingLeft: width > 991 ? '5vw' : '5vw',\n      paddingRight: width > 991 ? '5vw' : '5vw',\n      fontSize: width > 991 ? '1.15rem' : '1rem',\n      wordWrap: 'break-word'\n    },\n    groupHeader: {\n      fontFamily: 'Poppins',\n      fontSize: width > 991 ? '1.5rem' : '1rem',\n      color: '#19A2C0',\n      marginTop: width > 991 ? '2rem' : '2vh',\n      marginLeft: width > 991 ? '0.5rem' : '0.01rem',\n      fontWeight: 400\n    }\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <Content style={styling.content}>\n        <Row style={styling.container}>\n          <Col xl={14} lg={14} md={18} sm={20} xs={22}>\n            <p style={styling.valueProp}>\n              Social impact and economic growth happens through collaboraton.\n              <span style={styling.span}> We help make it happen.</span>\n            </p>\n          </Col>\n          <Col xl={10} lg={10} md={18} sm={20} xs={22}>\n            <img\n              src={PeopleImg}\n              style={styling.people}\n              alt='a team of web developers building a website for a non-profit'\n            />\n          </Col>\n        </Row>\n        <Row justify='center' style={styling.groups}>\n          <Col xl={10} lg={10} md={18} sm={20} xs={22}>\n            <div>\n              <h3 style={styling.subHeaders}> For Volunteers</h3>\n              <p style={styling.subContent}>\n                Create a profile and find interesting projects to contribute to.\n              </p>\n              <Button style={styling.getStarted}>Get Started</Button>\n            </div>\n          </Col>\n          <Col xl={1} lg={0} md={0} sm={0} xs={0}>\n            <Divider\n              type='vertical'\n              style={{\n                borderColor: '#C4C4C4',\n                minHeight: '15vh',\n                padding: 0,\n                margin: 0\n              }}\n            ></Divider>\n          </Col>\n          <Col xl={10} lg={10} md={18} sm={20} xs={22}>\n            <div>\n              <h3 style={styling.subHeaders}> For Partners </h3>\n              <p style={styling.subContent}>\n                For non-profits and startup partners, create a project, add\n                issues, and track progress.\n              </p>\n              <Button style={styling.getStarted}>Get Started</Button>\n            </div>\n          </Col>\n        </Row>\n      </Content>\n      <Content style={styling.content2}>\n        <Row justify='center' style={styling.container2}>\n          <Col xl={10} lg={10} md={18} sm={22} xs={22}>\n            <img\n              src={PeopleImg2}\n              style={styling.people2}\n              alt='a team of analysts in a board room problem solving'\n            />\n          </Col>\n          <Col xl={14} lg={14} md={18} sm={22} xs={22}>\n            <div>\n              <h3 style={styling.valueCreation}>Value Creation</h3>\n            </div>\n            <p style={styling.vogi}>\n              Vogi is the not-for-profit solution provider to help meet software\n              development and business analysis needs for non-profits and\n              early-stage startups in Canada.\n            </p>\n          </Col>\n        </Row>\n        <Row>\n          <Col style={styling.volunteer} id='/volunteer'>\n            <div style={styling.groupDescription}>\n              <h3 style={styling.groupHeader}>Volunteers</h3>\n              <p>\n                Our volunteers are business and software developer professionals\n                and students seeking to do some good or create valye by\n                contributing to non-profit and early stage start up\n                organizations in Canada. References for each project completed\n                by volunteers are provided on request and any reward (if any)\n                provided by organizations go directly to the contributors.\n              </p>\n            </div>\n          </Col>\n          <Col xl={8} lg={8} md={8} sm={8} xs={8} style={{ marginLeft: 'auto', marginRight: 'auto'}}>\n            <Divider\n              type='horizontal'\n              style={{ borderColor: '#C4C4C4', maxWidth: '25vw' }}\n            ></Divider>\n          </Col>\n          <Col style={styling.partner} id='/partner'>\n            <div style={styling.groupDescription}>\n              <h3 style={styling.groupHeader}>Partners</h3>\n              <p>\n                Our partners are non-profit’s and early stage startups with no\n                financial backing. Before a project is accepted, we assess the\n                partner’s financial capacity to employ workers (or lack of), our\n                available volunteers, the project scope, and the timeframe for\n                the project completion.\n              </p>\n            </div>\n          </Col>\n        </Row>\n      </Content>\n    </div>\n  )\n}\n\nexport default Landing\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Form as AntForm, Input, Button } from 'antd'\nimport API from '../../utils/API'\nimport useWindowSize from '../../utils/useWindowSize'\n\nfunction PartnerLoginForm () {\n  const [width] = useWindowSize()\n  const styling = {\n    formLayout: {\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 16\n      }\n    },\n    responsiveMargin: {\n      marginBottom: width > 550 ? 12 : 0\n    }\n  }\n  const [form] = AntForm.useForm()\n  const isAuthenticated = localStorage.getItem('tokens')\n  if (isAuthenticated) return <Redirect to='/user/dashboard' />\n\n  const onFinish = values => {\n    const { email, password } = values\n    API.logIn({ username: email, password, role: 'Partner' })\n      .then(res => {\n        form.resetFields()\n        localStorage.setItem('tokens', JSON.stringify(res.data))\n        localStorage.setItem('role', 'Partner')\n        window.location.reload()\n      })\n      .catch(e => {\n        if (e.response.status === 401) {\n          form.setFields([\n            {\n              name: 'password',\n              errors: ['Invalid email or password.']\n            },\n            {\n              name: 'email',\n              errors: [' ']\n            }\n          ])\n        }\n      })\n  }\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <AntForm\n      size={width > 550 ? 'default' : 'small'}\n      form={form}\n      name='partner form'\n      initialValues={{ email: '', password: '', remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <AntForm.Item\n        {...styling.formLayout}\n        label='E-mail'\n        rules={[\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail!'\n          },\n          { required: true, message: 'Please input your E-mail!' }\n        ]}\n        colon={false}\n        name='email'\n      >\n        <Input placeholder='Enter your email...' />\n      </AntForm.Item>\n\n      <AntForm.Item\n        {...styling.formLayout}\n        label='Password'\n        rules={[{ required: true, message: 'Please input your password!' }]}\n        colon={false}\n        name='password'\n      >\n        <Input.Password placeholder='Enter your password...' />\n      </AntForm.Item>\n      <AntForm.Item>\n        <a className='login-form-forgot' href='/forgot'>\n          Forgot password\n        </a>\n      </AntForm.Item>\n      <AntForm.Item style={styling.responsiveMargin}>\n        <Button\n          style={{ backgroundColor: '#FD4F64', border: 'none' }}\n          type='primary'\n          shape='round'\n          htmlType='submit'\n        >\n          Log In\n        </Button>\n      </AntForm.Item>\n    </AntForm>\n  )\n}\n\nexport default PartnerLoginForm\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Form as AntForm, Input, Button } from 'antd'\nimport API from '../../utils/API'\nimport useWindowSize from '../../utils/useWindowSize'\n\nfunction VolunteerLogIn () {\n  const [width] = useWindowSize()\n  const styling = {\n    formLayout: {\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 16\n      }\n    },\n    responsiveMargin: {\n      marginBottom: width > 550 ? 12 : 0\n    }\n  }\n  const [form] = AntForm.useForm()\n  const isAuthenticated = localStorage.getItem('tokens')\n  if (isAuthenticated) return <Redirect to='/user/dashboard' />\n\n  const onFinish = values => {\n    const { email, password } = values\n    API.logIn({ username: email, password, role: 'Volunteer' })\n      .then(res => {\n        console.log(res)\n        form.resetFields()\n        localStorage.setItem('tokens', JSON.stringify(res.data))\n        localStorage.setItem('role', 'Volunteer')\n        window.location.reload()\n      })\n      .catch(e => {\n        console.log(e.response.data.message)\n        if (e.response.status === 401) {\n          form.setFields([\n            {\n              name: 'password',\n              errors: ['Invalid email or password.']\n            },\n            {\n              name: 'email',\n              errors: [' ']\n            }\n          ])\n        }\n      })\n  }\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <AntForm\n      size={width > 550 ? 'default' : 'small'}\n      form={form}\n      name='volunteer form'\n      initialValues={{ email: '', password: '', remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <AntForm.Item\n        {...styling.formLayout}\n        label='E-mail'\n        rules={[\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail!'\n          },\n          { required: true, message: 'Please input your E-mail!' }\n        ]}\n        colon={false}\n        name='email'\n      >\n        <Input placeholder='Enter your email...' />\n      </AntForm.Item>\n      <AntForm.Item\n        {...styling.formLayout}\n        label='Password'\n        rules={[{ required: true, message: 'Please input your password!' }]}\n        colon={false}\n        name='password'\n      >\n        <Input.Password placeholder='Enter your password...' />\n      </AntForm.Item>\n      <AntForm.Item>\n        <a className='login-form-forgot' href='/forgot'>\n          Forgot password\n        </a>\n      </AntForm.Item>\n      <AntForm.Item style={styling.responsiveMargin}>\n        <Button\n          style={{ backgroundColor: '#FD4F64', border: 'none' }}\n          type='primary'\n          shape='round'\n          htmlType='submit'\n        >\n          Log In\n        </Button>\n      </AntForm.Item>\n    </AntForm>\n  )\n}\n\nexport default VolunteerLogIn\n","// Import React dependencies\nimport React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n// Import Menu and SubMenu components from ant design\nimport { Menu } from 'antd'\n\n\nconst styling = {\n  menu: {\n    backgroundColor: '#353452'\n  },\n  item: {\n    color: '#ffffff',\n    fontFamily: 'Poppins',\n    fontSize: '1rem'\n  }\n}\n\n// Right Menu component\nfunction AltMenu (props) {\n  const { order } = props\n  const [current, setCurrent] = useState('mail')\n\n  const handleClick = e => {\n    // console.log('click ', e)\n    setCurrent({ current: e.key })\n  }\n\n  // Function to scroll to the top of the page when called\n  // calling react-scroll method\n\n  return (\n    <Menu\n      onClick={handleClick}\n      selectedKeys={[current]}\n      mode={order}\n      style={styling.menu}\n    >\n      <Menu.Item key='signup'>\n        <Link to='/signup' style={styling.item}>\n          Sign Up\n        </Link>\n      </Menu.Item>\n      <Menu.Item key='login'>\n        <Link to='/login' style={styling.item}>\n          Log In\n        </Link>\n      </Menu.Item>\n    </Menu>\n  )\n}\nexport default AltMenu\n","import React, { useState } from 'react'\nimport AltMenu from '../AltMenu'\nimport AuthMenu from '../AuthMenu'\nimport { Drawer } from 'antd'\nimport { MenuOutlined } from '@ant-design/icons'\nimport { Link } from 'react-router-dom'\nimport Logo from '../../resources/logo1.png'\nimport './style.css'\n\nfunction Navbar ({ authenticated }) {\n  //   const [current, setCurrent] = useState('mail')\n  const [visible, setVisible] = useState(false)\n\n  const styling = {\n    logo: {\n      maxHeight: '4.5rem'\n    },\n    drawer: {\n      backgroundColor: '#353452'\n    }\n  }\n\n  const showDrawer = () => {\n    setVisible(true)\n  }\n  const onClose = () => {\n    setVisible(false)\n  }\n  return (\n    <nav\n      className='menuBar'\n      style={{\n        borderBottom: '1px solid #C4C4C4',\n        backgroundColor: '#353452',\n        color: '#ffffff'\n      }}\n    >\n      <div className='logo'>\n        <Link to='/'>\n          <img src={Logo} style={styling.logo} />\n        </Link>\n      </div>\n      <div className='menuCon'>\n        <div className='rightMenu'>\n          {authenticated ? (\n            <div>\n              <AuthMenu order='horizontal' />\n            </div>\n          ) : (\n            <div>\n              <AltMenu order='horizontal' />\n            </div>\n          )}\n        </div>\n        <div className='barsMenu'>\n          <MenuOutlined onClick={showDrawer} />\n        </div>\n        <Drawer\n          placement='right'\n          closable={true}\n          onClose={onClose}\n          visible={visible}\n          keyboard={true}\n          bodyStyle={styling.drawer}\n        >\n          {authenticated ? (\n            <AuthMenu order='inline' />\n          ) : (\n            <AltMenu order='inline' />\n          )}\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\nexport default Navbar\n","import React from 'react'\nimport PartnerForm from '../../components/LogInForms/partnerForm'\nimport VolunteerForm from '../../components/LogInForms/volunteerForm'\nimport { Layout, Card, Row, Col, Divider } from 'antd'\nimport AltNavbar from '../../components/AltNavbar'\nimport useWindowSize from '../../utils/useWindowSize'\n\nconst { Content } = Layout\n\nfunction Login () {\n  const [width] = useWindowSize()\n  const styling = {\n    wrapper: {},\n    header: {\n      border: 'none',\n      color: '#353452',\n      fontSize: width > 990 ? 22 : 20\n    },\n    content: {\n      paddingTop: width > 990 ? 24 : 16,\n      margin: 0,\n      minHeight: width > 767 ? '90vh' : '94vh',\n      backgroundColor: '#F8F8F8'\n    },\n    volunteerCard: {\n      width: '100%',\n      marginLeft: '0rem',\n      marginBottom: width > 990 ? '0%' : '4%',\n      marginTop: width > 990 ? '18%' : '0%',\n      border: '1px #C4C4C4 solid',\n      borderRadius: '15px'\n    },\n\n    partnerCard: {\n      width: '100%',\n      marginLeft: '0rem',\n      marginBottom: width > 990 ? '0%' : '4%',\n      marginTop: width > 990 ? '18%' : '0%',\n      border: '1px #C4C4C4 solid',\n      borderRadius: '15px'\n    }\n  }\n  return (\n    <>\n      <AltNavbar />\n      <Layout>\n        <Content style={styling.content}>\n          <Row justify='center'>\n            <Col xl={10} lg={10} md={18} sm={20} xs={21}>\n              <Card\n                size={width > 990 ? 'default' : 'small'}\n                title='Volunteer Log In'\n                headStyle={styling.header}\n                style={styling.volunteerCard}\n              >\n                <VolunteerForm />\n              </Card>\n            </Col>\n            <Col className='gutter-row' xl={2} lg={2} md={0} sm={0} xs={0}>\n              <Divider\n                type='vertical'\n                style={{\n                  borderColor: '#C4C4C4',\n                  minHeight: '57vh',\n                  marginTop: '70px'\n                }}\n              ></Divider>\n            </Col>\n\n            <Col xxl={10} lg={10} md={18} sm={20} xs={21}>\n              <Card\n                size={width > 990 ? 'default' : 'small'}\n                title='Partner Log In'\n                headStyle={styling.header}\n                style={styling.partnerCard}\n              >\n                <PartnerForm />\n              </Card>\n            </Col>\n          </Row>\n        </Content>\n      </Layout>\n    </>\n  )\n}\n\nexport default Login\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Form as AntForm, Input, Button } from 'antd'\nimport API from '../../utils/API'\nimport useWindowSize from '../../utils/useWindowSize'\n\nfunction PartnerSignUp () {\n  const [width, height] = useWindowSize()\n  const styling = {\n    formLayout: {\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 16\n      }\n    },\n    githubButton: {\n      backgroundColor: 'black',\n      border: 'none'\n    },\n    responsiveMargin: {\n      marginBottom: width > 575 ? 12 : 0\n    }\n  }\n  const [form] = AntForm.useForm()\n  const isAuthenticated = localStorage.getItem('tokens')\n  if (isAuthenticated) return <Redirect to='/user/dashboard' />\n\n  const onFinish = values => {\n    const { email, password } = values\n    API.createUser({ username: email, password, role: 'Partner' })\n      .then(res => {\n        form.resetFields()\n        localStorage.setItem('role', 'Partner')\n        localStorage.setItem('tokens', JSON.stringify(res.data))\n        window.location.reload()\n      })\n      .catch(e => {\n        if (e.response && e.response.data) {\n          form.setFields([\n            {\n              name: 'email',\n              errors: [e.response.data.message]\n            }\n          ])\n        }\n      })\n  }\n\n  const lengthValidator = (rule, value) => {\n    if (value.length > 5) {\n      return Promise.resolve()\n    }\n    return Promise.reject('Password must be at least 6 characters.')\n  }\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <AntForm\n      size={width > 575 ? 'default' : 'small'}\n      form={form}\n      name='partner form'\n      initialValues={{ email: '', password: '', remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <AntForm.Item\n        {...styling.formLayout}\n        label='E-mail'\n        rules={[\n          {\n            type: 'email',\n            message: 'The input is not a valid E-mail!'\n          },\n          { required: true, message: 'Please input your E-mail!' }\n        ]}\n        colon={false}\n        name='email'\n      >\n        <Input placeholder='Enter your email...' />\n      </AntForm.Item>\n      <AntForm.Item\n        {...styling.formLayout}\n        label='Password'\n        rules={[\n          { validator: lengthValidator },\n          { required: true, message: ' ' }\n        ]}\n        colon={false}\n        name='password'\n      >\n        <Input.Password placeholder='Choose a password...' />\n      </AntForm.Item>\n      <AntForm.Item>\n        <Button\n          style={{ backgroundColor: '#FD4F64', border: 'none' }}\n          shape='round'\n          htmlType='submit'\n          type='primary'\n        >\n          Sign Up\n        </Button>\n      </AntForm.Item>\n    </AntForm>\n  )\n}\nexport default PartnerSignUp\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Form as AntForm, Input, Button } from 'antd'\nimport API from '../../utils/API'\nimport useWindowSize from '../../utils/useWindowSize'\n\nfunction VolunteerSignUp () {\n  const [width, height] = useWindowSize()\n  const styling = {\n    formLayout: {\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 16\n      }\n    },\n    responsiveMargin: {\n      marginBottom: width > 767 ? 12 : 0\n    }\n  }\n  const [form] = AntForm.useForm()\n  const isAuthenticated = localStorage.getItem('tokens')\n  if (isAuthenticated) return <Redirect to='/user/dashboard' />\n\n  const onFinish = values => {\n    const { email, password } = values\n    API.createUser({ username: email, password, role: 'Volunteer' })\n      .then(res => {\n        form.resetFields()\n        localStorage.setItem('tokens', JSON.stringify(res.data))\n        localStorage.setItem('role', 'Volunteer')\n        window.location.reload()\n      })\n      .catch(e => {\n        if (e.response && e.response.data) {\n          form.setFields([\n            {\n              name: 'email',\n              errors: [e.response.data.message]\n            }\n          ])\n        }\n      })\n  }\n  const lengthValidator = (rule, value) => {\n    if (value.length > 5) {\n      return Promise.resolve()\n    }\n    return Promise.reject('Password must be at least 6 characters.')\n  }\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <>\n      <AntForm\n        size={width > 575 ? 'default' : 'small'}\n        form={form}\n        name='volunteer form'\n        initialValues={{ email: '', password: '', remember: true }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <AntForm.Item\n          {...styling.formLayout}\n          label='E-mail'\n          rules={[\n            {\n              type: 'email',\n              message: 'The input is not a valid E-mail!'\n            },\n            { required: true, message: 'Please input your E-mail!' }\n          ]}\n          colon={false}\n          name='email'\n        >\n          <Input placeholder='Enter your email...' />\n        </AntForm.Item>\n        <AntForm.Item\n          {...styling.formLayout}\n          label='Password'\n          rules={[\n            { validator: lengthValidator },\n            { required: true, message: ' ' }\n          ]}\n          colon={false}\n          name='password'\n        >\n          <Input.Password placeholder='Choose a password...' />\n        </AntForm.Item>\n        <AntForm.Item>\n          <Button\n            style={{  backgroundColor: '#FD4F64', border: 'none' }}\n            type='primary'\n            shape='round'\n            htmlType='submit'\n          >\n            Sign Up\n          </Button>\n        </AntForm.Item>\n      </AntForm>\n    </>\n  )\n}\n\nexport default VolunteerSignUp\n","import React from 'react'\nimport PartnerForm from '../../components/SignUpForms/partnerForm'\nimport VolunteerForm from '../../components/SignUpForms/volunteerForm'\nimport { Layout, Card, Row, Col, Divider } from 'antd'\nimport AltNavbar from '../../components/AltNavbar'\n// import Navbar from '../../components/Navbar'\nimport useWindowSize from '../../utils/useWindowSize'\n\nconst { Content } = Layout\n\nfunction SignUp () {\n  const [width] = useWindowSize()\n  const styling = {\n    wrapper: {},\n    header: {\n      border: 'none',\n      color: '#353452',\n      fontSize: width > 990 ? 22 : 20\n    },\n    content: {\n      paddingTop: width > 767 ? 24 : 20,\n      margin: 0,\n      minHeight: width > 767 ? '90vh' : '94vh',\n      backgroundColor: '#F8F8F8'\n    },\n    volunteerCard: {\n      width: '100%',\n      marginLeft: '0rem',\n      marginBottom: width > 990 ? '0%' : '5%',\n      marginTop: width > 990 ? '20%' : '0%',\n      border: '1px #C4C4C4 solid',\n      borderRadius: '15px'\n    },\n\n    partnerCard: {\n      width: '100%',\n      marginLeft: '0rem',\n      marginBottom: width > 990 ? '0%' : '5%',\n      marginTop: width > 990 ? '20%' : '0%',\n      border: '1px #C4C4C4 solid',\n      borderRadius: '15px'\n    }\n  }\n  return (\n    <div style={styling.page}>\n      <AltNavbar />\n      <Layout>\n        <Content style={styling.content}>\n          <Row justify='center'>\n            <Col xl={10} lg={10} md={18} sm={20} xs={21}>\n              <Card\n                size={width > 550 ? 'default' : 'small'}\n                title='Volunteer Sign Up'\n                headStyle={styling.header}\n                style={styling.volunteerCard}\n              >\n                <VolunteerForm />\n              </Card>\n            </Col>\n            <Col className='gutter-row' xl={2} lg={2} md={0} sm={0} xs={0}>\n              <Divider\n                type='vertical'\n                // style={{ borderColor: '#C4C4C4', minHeight: '80vh' }}\n                style={{\n                  borderColor: '#C4C4C4',\n                  minHeight: '50vh',\n                  marginTop: '85px'\n                }}\n              ></Divider>\n            </Col>\n            <Col xl={10} lg={10} md={18} sm={20} xs={21}>\n              <Card\n                size={width > 550 ? 'default' : 'small'}\n                title='Partner Sign Up'\n                headStyle={styling.header}\n                style={styling.partnerCard}\n              >\n                <PartnerForm />\n              </Card>\n            </Col>\n          </Row>\n        </Content>\n      </Layout>\n    </div>\n  )\n}\n\nexport default SignUp\n","import React from 'react'\n\nconst JoinedProjectContext = React.createContext()\n\nexport default JoinedProjectContext\n","import React, { useState, useContext, useEffect } from 'react'\nimport { Layout, Menu } from 'antd'\nimport {\n  SettingOutlined,\n  PlusOutlined,\n  UnorderedListOutlined,\n  UserOutlined\n} from '@ant-design/icons'\nimport JoinedProjectContext from '../../utils/JoinedProjectContext'\nimport useWindowSize from '../../utils/useWindowSize'\n\nconst { Sider } = Layout\nconst { SubMenu } = Menu\n\nfunction VolunteerSidebar ({ contentHandler, currentProjectHandler }) {\n  const [width, height] = useWindowSize()\n  const [collapsed, setCollapsed] = useState(false)\n\n  const styling = {\n    responsiveMargin: {\n      marginLeft: width < 767 ? -14 : 0\n    },\n    topPadding: {\n      paddingTop: width < 767 ? '5px' : '10px'\n    }\n  }\n\n  useEffect(() => {\n    width < 767 ? setCollapsed(true) : setCollapsed(false)\n  }, [width])\n  const joinedProjects = useContext(JoinedProjectContext)\n\n  const renderProjects = () => {\n    return joinedProjects.map(project => (\n      <Menu.Item\n        key={project._id}\n        onClick={() => currentProjectHandler(project._id)}\n      >\n        {project.name}\n      </Menu.Item>\n    ))\n  }\n\n  return (\n    <Sider\n      theme='light'\n      // collapsible\n      collapsed={collapsed}\n      size='large'\n      collapsedWidth='50px'\n      style={{\n        overflow: 'auto',\n        borderRight: '1px solid #C4C4C4'\n      }}\n      // onCollapse={onCollapse}\n      // style={{ minWidth: '0px', padding: '0', margin: '0', width: '10px' }}\n    >\n      <Menu\n        defaultSelectedKeys={['1']}\n        mode='inline'\n        style={styling.topPadding}\n      >\n        <Menu.Item\n          onClick={() => contentHandler('Profile')}\n          key='1'\n          style={{ paddingLeft: '18px' }}\n          icon={<UserOutlined />}\n        >\n          Profile\n        </Menu.Item>\n        <Menu.Item\n          onClick={() => contentHandler('Join a New Project')}\n          key='2'\n          icon={<PlusOutlined />}\n          style={{ paddingLeft: '18px' }}\n        >\n          New Project\n        </Menu.Item>\n        <SubMenu\n          key='sub1'\n          icon={<UnorderedListOutlined />}\n          title='Active Projects'\n          style={styling.responsiveMargin}\n        >\n          {renderProjects()}\n        </SubMenu>\n        <Menu.Item\n          onClick={() => contentHandler('Settings')}\n          key='3'\n          icon={<SettingOutlined />}\n          style={{ paddingLeft: '18px' }}\n        >\n          Settings\n        </Menu.Item>\n      </Menu>\n    </Sider>\n  )\n}\n\nexport default VolunteerSidebar\n","import React, { useEffect } from 'react'\nimport { Form, Input, Button, notification } from 'antd'\nimport API from '../../../utils/API'\nimport useWindowSize from '../../../utils/useWindowSize'\n\nfunction Profile () {\n  const [width] = useWindowSize()\n  const styling = {\n    formLayout: {\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 16\n      }\n    },\n    leftAlign: {\n      textAlign: 'left'\n    },\n    button: {\n      span: 24,\n      align: 'center',\n      backgroundColor: '#FD4F64',\n      border: 'none'\n    },\n    content: {\n      minHeight: width > 767 ? '70vh' : '80vh'\n    }\n  }\n  const [form] = Form.useForm()\n  const openNotificationWithIcon = type => {\n    notification[type]({\n      message: 'Profile Updated',\n      description: 'You have successfully updated your profile.'\n    })\n  }\n\n  const onFinish = values => {\n    API.updateVolunteer(values)\n      .then(res => {\n        openNotificationWithIcon('success')\n        return res.data\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  useEffect(() => {\n    API.getUser().then(res => {\n      if (res.data.volunteerFirstName)\n        form.setFieldsValue({ first: res.data.volunteerFirstName })\n      if (res.data.volunteerLastName)\n        form.setFieldsValue({ last: res.data.volunteerLastName })\n      if (res.data.volunteerAbout)\n        form.setFieldsValue({ about: res.data.volunteerAbout })\n      if (res.data.volunteerSkills)\n        form.setFieldsValue({ skills: res.data.volunteerSkills })\n    })\n  }, [])\n\n  return (\n    <div style={styling.content}>\n      <Form onFinish={onFinish} form={form}>\n        <Form.Item\n          {...styling.formLayout}\n          name='first'\n          colon={false}\n          label='First Name'\n        >\n          <Input placeholder='Enter your first name...' />\n        </Form.Item>\n        <Form.Item\n          {...styling.formLayout}\n          name='last'\n          colon={false}\n          label='Last Name'\n        >\n          <Input placeholder='Enter your last name...' />\n        </Form.Item>\n        <Form.Item\n          {...styling.formLayout}\n          name='skills'\n          colon={false}\n          label='Skills'\n        >\n          <Input placeholder='Your list of skills...' />\n        </Form.Item>\n        <Form.Item\n          {...styling.formLayout}\n          name='about'\n          colon={false}\n          label='About'\n        >\n          <Input.TextArea placeholder='About you section...' />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type='primary'\n            htmlType='submit'\n            shape='round'\n            style={styling.button}\n          >\n            Save\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  )\n}\n\nexport default Profile\n","import React from 'react'\n\nconst AvailableProjectContext = React.createContext()\n\nexport default AvailableProjectContext\n","import React, { useContext } from 'react'\nimport { Card, Button, notification } from 'antd'\nimport AvailableProjectContext from '../../../utils/AvailableProjectContext'\nimport useWindowSize from '../../../utils/useWindowSize'\n\nfunction NewProject ({ joinProjectHandler }) {\n  const [width] = useWindowSize()\n  const projects = useContext(AvailableProjectContext)\n  const styling = {\n    cardSize: width > 767 ? 'default' : 'small'\n  }\n\n  const openNotificationWithIcon = (type, name) => {\n    notification[type]({\n      message: 'Welcome!',\n      description: `You are now a part of ${name}.`\n    })\n  }\n\n  return (\n    <>\n      {projects.map(project => (\n        <Card\n          style={{ marginBottom: 10 }}\n          bodyStyle={{ paddingTop: 0 }}\n          headStyle={{ borderBottom: 'none' }}\n          title={project.name}\n          size={styling.cardSize}\n        >\n          <div style={{ wordWrap: 'break-word' }}>\n            <span style={{ fontWeight: 600 }}>Skills: </span>\n            <span style={{ fontStyle: 'italic' }}>{project.skills}</span>\n          </div>\n          <div\n            style={{\n              textAlign: 'left',\n              wordWrap: 'break-word',\n              marginTop: '0.5rem'\n            }}\n          >\n            <span style={{ fontWeight: 600 }}>Description: </span>\n            {project.description}\n          </div>\n          <br />\n          <Button\n            id={project._id}\n            style={{ backgroundColor: '#FD4F64', border: 'none' }}\n            shape='round'\n            type='primary'\n            onClick={() => {\n              openNotificationWithIcon('success', project.name)\n              return joinProjectHandler(project._id)\n            }}\n          >\n            Join\n          </Button>\n        </Card>\n      ))}\n    </>\n  )\n}\n\nexport default NewProject\n","import React, { useState, useEffect } from 'react'\nimport { Card, Button, Progress, List } from 'antd'\nimport useWindowSize from '../../../utils/useWindowSize'\nimport { CarryOutOutlined } from '@ant-design/icons'\nimport API from '../../../utils/API'\n\nfunction ProjectCard ({ currentProject }) {\n  const [width] = useWindowSize()\n  const styling = {\n    header: {\n      border: 'none',\n      color: '#1890ff',\n      fontSize: width > 767 ? '22px' : '18px',\n      marginBottom: 0\n    },\n    content: {\n      padding: 0,\n      margin: 0,\n      minHeight: '100vh'\n    },\n    card: {\n      width: '100%'\n    },\n    cardBody: {\n      paddingTop: 0\n    },\n    content: {\n      minHeight: width > 767 ? '70vh' : '80vh'\n    },\n    size: width > 767 ? 'default' : 'small',\n    list: {\n      minHeight: 175\n    }\n  }\n\n  const [percent, setPercent] = useState(0)\n  const [issuesData, setIssuesData] = useState([])\n\n  useEffect(() => {\n    const repoName = currentProject.name.trim()\n    API.getAllIssues(repoName).then(res => {\n      const issues = res.data[0]\n      const progress = res.data[1]\n      setIssuesData(issues)\n      console.log(progress)\n      const value = Math.round(\n        (progress.closedIssues / progress.totalIssues) * 100\n      )\n      value === NaN ? setPercent(0) : setPercent(value)\n    })\n  }, [currentProject])\n\n  return (\n    <div style={styling.content}>\n      <div>\n        <span style={{ fontWeight: 'bold' }}>Skills: </span>\n        <span style={{ fontStyle: 'italic' }}>{currentProject.skills}</span>\n      </div>\n      <div style={{ textAlign: 'left', marginTop: '0.5rem' }}>\n        <span style={{ fontWeight: 'bold' }}>Description: </span>\n        <span style={{ fontStyle: 'italic' }}>\n          {currentProject.description}\n        </span>\n      </div>\n      <div\n        style={{\n          wordWrap: 'break-word',\n          marginTop: '1rem',\n          backgroundColor: '#F8F8F8',\n          width: '100%'\n        }}\n      >\n        {/* <Timeline>\n                  {issuesData.map(item => <Timeline.Item>{item.title}</Timeline.Item>)}\n                </Timeline> */}\n        <h3 style={{ paddingTop: '0.5rem' }}>Issues</h3>\n        <List\n          itemLayout='horizontal'\n          style={styling.list}\n          split={false}\n          dataSource={issuesData}\n          renderItem={item => {\n            const iconColor = item.state === 'open' ? '#87d068' : '#c4c4c4'\n            return (\n              <List.Item\n                style={{\n                  textAlign: 'left',\n                  marginLeft: '2rem'\n                }}\n              >\n                <CarryOutOutlined\n                  style={{\n                    color: iconColor,\n                    fontSize: '2.5vh',\n                    marginRight: 5\n                  }}\n                />\n                {item.title}\n              </List.Item>\n            )\n          }}\n        />\n      </div>\n      <br />\n      <Progress width={80} type='circle' percent={percent} />\n      <br />\n      <br />\n      <Button\n        type='primary'\n        shape='round'\n        onClick={() =>\n          window.open(\n            `https://github.com/vogiPartner/${currentProject.name}`,\n            '_blank'\n          )\n        }\n      >\n        View Repository\n      </Button>\n    </div>\n  )\n}\n\nexport default ProjectCard\n","import React from 'react'\n\nconst UserContext = React.createContext()\n\nexport default UserContext\n","import React, { useState, useEffect, useContext } from 'react'\nimport Navbar from '../../components/Navbar'\nimport { Layout, Card } from 'antd'\nimport VolunteerSidebar from '../../components/VolunteerSidebar'\nimport Profile from '../../dashboard-content/volunteer/Profile'\nimport NewProject from '../../dashboard-content/volunteer/NewProject'\nimport API from '../../utils/API'\nimport CurrentProject from '../../dashboard-content/volunteer/ActiveProjects'\nimport UserContext from '../../utils/UserContext'\n// Import React Context API\nimport AvailableProjectContext from '../../utils/AvailableProjectContext'\nimport JoinedProjectContext from '../../utils/JoinedProjectContext'\nimport useWindowSize from '../../utils/useWindowSize'\n\nconst { Content, Footer } = Layout\n\nfunction VolunteerDashboard () {\n  const [width] = useWindowSize()\n  const styling = {\n    layout: {\n      height: width > 767 ? '90vh' : '93vh'\n    },\n    header: {\n      backgroundColor: '#E6F7FF'\n    },\n    content: {\n      margin: width > 767 ? '10px' : '5px'\n    },\n    contentDiv: {\n      padding: 24,\n      minHeight: 360,\n      backgroundColor: 'white'\n    },\n    cardSize: width > 767 ? 'default' : 'small'\n  }\n  const [title, setTitle] = useState('Profile')\n  const [availableProjects, setAvailableProjects] = useState([])\n  const [currentProjects, setCurrentProjects] = useState([])\n  const [currentProject, setCurrentProject] = useState('')\n  const user = useContext(UserContext)\n\n  // Get Available Projects to Join\n  useEffect(() => {\n    API.getAvailableProjects().then(res => {\n      const fetchedProjects = res.data.map(\n        ({ _id, name, description, skills }) => {\n          return {\n            _id,\n            name,\n            description,\n            skills\n          }\n        }\n      )\n      setAvailableProjects(fetchedProjects)\n      return res.data\n    })\n  }, [currentProjects])\n\n  useEffect(() => {\n    // Get Current Projects\n    API.getUser().then(res => {\n      const joinedProjects = res.data.projects.map(\n        ({ _id, name, description, skills }) => {\n          return {\n            _id,\n            name,\n            description,\n            skills\n          }\n        }\n      )\n      setCurrentProjects(joinedProjects)\n    })\n  }, [])\n\n  const contentHandler = title => {\n    setTitle(title)\n  }\n\n  const currentProjectHandler = id => {\n    currentProjects.forEach(project => {\n      if (project._id === id) {\n        setCurrentProject(project)\n        setTitle(project.name)\n      }\n    })\n  }\n\n  const joinProjectHandler = id => {\n    API.joinProject({ userID: user._id, projectID: id })\n      .then(res => {\n        setCurrentProjects([...currentProjects, res.data])\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  const renderContent = () => {\n    switch (title) {\n      case 'Profile':\n        return <Profile />\n      case 'Join a New Project':\n        return <NewProject joinProjectHandler={joinProjectHandler} />\n      case currentProject.name:\n        return <CurrentProject currentProject={currentProject} />\n      default:\n        return <div />\n    }\n  }\n  return (\n    <>\n      <AvailableProjectContext.Provider value={availableProjects}>\n        <JoinedProjectContext.Provider value={currentProjects}>\n          <Navbar authenticated='true' />\n          <Layout>\n            <VolunteerSidebar\n              contentHandler={contentHandler}\n              currentProjectHandler={currentProjectHandler}\n            />\n            <Layout style={styling.layout}>\n              <Content style={styling.content}>\n                <Card\n                  title={title}\n                  headStyle={styling.header}\n                  size={styling.cardSize}\n                >\n                  {renderContent()}\n                </Card>\n              </Content>\n            </Layout>\n          </Layout>\n        </JoinedProjectContext.Provider>\n      </AvailableProjectContext.Provider>\n    </>\n  )\n}\n\nexport default VolunteerDashboard\n","import React from 'react'\n\nconst CreatedProjectContext = React.createContext()\n\nexport default CreatedProjectContext\n","import React, { useState, useContext, useEffect } from 'react'\nimport { Layout, Menu } from 'antd'\nimport {\n  SettingOutlined,\n  PlusOutlined,\n  RiseOutlined,\n  UserOutlined\n} from '@ant-design/icons'\nimport CreatedProjectContext from '../../utils/CreatedProjectContext'\nimport useWindowSize from '../../utils/useWindowSize'\n\nconst { Sider } = Layout\nconst { SubMenu } = Menu\n\nfunction PartnerSidebar ({ contentHandler, currentProjectHandler }) {\n  const [width, height] = useWindowSize()\n  const [collapsed, setCollapsed] = useState(false)\n\n  const styling = {\n    responsiveMargin: {\n      marginLeft: width < 767 ? -14 : 0\n    },\n    topPadding: {\n      paddingTop: width < 767 ? '5px' : '10px'\n    }\n  }\n\n  useEffect(() => {\n    width < 767 ? setCollapsed(true) : setCollapsed(false)\n  }, [width])\n\n  const projects = useContext(CreatedProjectContext)\n\n  const renderProjects = () => {\n    return projects.map(project => (\n      <Menu.Item\n        key={project._id}\n        onClick={() => currentProjectHandler(project._id)}\n      >\n        {project.name}\n      </Menu.Item>\n    ))\n  }\n  return (\n    <Sider\n      theme='light'\n      collapsed={collapsed}\n      size='large'\n      collapsedWidth='50px'\n      style={{\n        overflow: 'auto',\n        borderRight: '1px solid #C4C4C4',\n        fixed: true\n      }}\n    >\n      <Menu\n        defaultSelectedKeys={['1']}\n        mode='inline'\n        style={styling.topPadding}\n      >\n        <Menu.Item\n          onClick={() => contentHandler('Organization Information')}\n          key='1'\n          style={{ paddingLeft: '18px' }}\n          icon={<UserOutlined />}\n        >\n          Organization Info\n        </Menu.Item>\n        <Menu.Item\n          onClick={() => contentHandler('Create New Project')}\n          key='2'\n          style={{ paddingLeft: '18px' }}\n          icon={<PlusOutlined />}\n        >\n          Create New Project\n        </Menu.Item>\n        <SubMenu\n          key='sub1'\n          icon={<RiseOutlined />}\n          title='Current Progress'\n          style={styling.responsiveMargin}\n        >\n          {renderProjects()}\n        </SubMenu>\n        <Menu.Item\n          onClick={() => contentHandler('Settings')}\n          key='4'\n          icon={<SettingOutlined />}\n          style={{ paddingLeft: '18px' }}\n        >\n          Settings\n        </Menu.Item>\n      </Menu>\n    </Sider>\n  )\n}\n\nexport default PartnerSidebar\n","import React from 'react'\nimport { Form, Input, Button } from 'antd'\nimport useWindowSize from '../../../utils/useWindowSize'\n\nfunction NewProject ({ onFinish, form, projectValidator }) {\n  const [width, height] = useWindowSize()\n  const styling = {\n    formLayout: {\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 16\n      }\n    },\n    formSize: width > 950 ? 'default' : 'small',\n    content: {\n      minHeight: width > 767 ? '70vh' : '80vh'\n    },\n    button: {\n      backgroundColor: '#FD4F64',\n      border: 'none'\n    }\n  }\n\n  return (\n    <div style={styling.content}>\n      <Form onFinish={onFinish} form={form}>\n        <Form.Item\n          {...styling.formLayout}\n          colon={false}\n          label='Name'\n          name='name'\n          rules={[\n            { required: true, message: 'Please enter the project name' },\n            { validator: projectValidator }\n          ]}\n        >\n          <Input placeholder='Enter the name of your project' />\n        </Form.Item>\n        <Form.Item\n          {...styling.formLayout}\n          colon={false}\n          label='Description'\n          name='description'\n          rules={[\n            { required: true, message: 'Please enter the project description' }\n          ]}\n        >\n          <Input.TextArea placeholder='Describe your project objectives' />\n        </Form.Item>\n        <Form.Item\n          {...styling.formLayout}\n          colon={false}\n          label='Skills Required'\n          name='skills'\n        >\n          <Input placeholder='List the skills you require separated by a comma' />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type='primary'\n            shape='round'\n            style={styling.button}\n            htmlType='submit'\n          >\n            Create\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  )\n}\n\nexport default NewProject\n","import React, { useEffect } from 'react'\nimport { Form, Input, Button, Radio, notification } from 'antd'\nimport API from '../../../utils/API'\nimport useWindowSize from '../../../utils/useWindowSize'\n\nfunction OrganizationInfo () {\n  const [form] = Form.useForm()\n  const [width] = useWindowSize()\n  const styling = {\n    formLayout: {\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 16\n      }\n    },\n    leftAlign: {\n      textAlign: 'left'\n    },\n    button: {\n      span: 24,\n      align: 'center',\n      backgroundColor: '#FD4F64',\n      border: 'none'\n    },\n    content: {\n      minHeight: width > 767 ? '70vh' : '80vh'\n    }\n  }\n  const openNotification = type => {\n    notification[type]({\n      message: 'Organization Info Updated',\n      description: 'You have successfully updated your organization profile.'\n    })\n  }\n\n  const onFinish = values => {\n    API.updatePartner(values)\n      .then(res => {\n        openNotification('success')\n        return res.data\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  useEffect(() => {\n    API.getUser().then(res => {\n      if (res.data.organizationType)\n        form.setFieldsValue({ type: res.data.organizationType })\n      if (res.data.organizationName)\n        form.setFieldsValue({ name: res.data.organizationName })\n      if (res.data.organizationAbout)\n        form.setFieldsValue({ about: res.data.organizationAbout })\n    })\n  }, [])\n\n  return (\n    <div style={styling.content}>\n      <Form onFinish={onFinish} form={form}>\n        <Form.Item\n          {...styling.formLayout}\n          style={styling.leftAlign}\n          colon={false}\n          name='type'\n          label='Type'\n        >\n          <Radio.Group>\n            <Radio.Button value='non-profit'>Non-Profit</Radio.Button>\n            <Radio.Button value='start-up'>Start-Up</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item\n          {...styling.formLayout}\n          colon={false}\n          label='Name'\n          name='name'\n        >\n          <Input placeholder='The name of the organization' />\n        </Form.Item>\n        <Form.Item\n          {...styling.formLayout}\n          colon={false}\n          label='About'\n          name='about'\n        >\n          <Input.TextArea placeholder='About the organization' />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type='primary'\n            htmlType='submit'\n            shape='round'\n            style={styling.button}\n          >\n            Save\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  )\n}\n\nexport default OrganizationInfo\n","import React, { useState, useEffect } from 'react'\nimport {\n  Layout,\n  Card,\n  Row,\n  Col,\n  Form as AntForm,\n  Input,\n  Button,\n  Steps,\n  List,\n  notification,\n  Progress\n} from 'antd'\nimport { CarryOutOutlined } from '@ant-design/icons'\nimport API from '../../../utils/API'\nimport useWindowSize from '../../../utils/useWindowSize'\n\nconst { Content } = Layout\nconst { TextArea } = Input\n\nfunction CurrentProject ({ currentProject }) {\n  const [width] = useWindowSize()\n  const styling = {\n    wrapper: {},\n    header: {\n      border: 'none',\n      color: '#1890ff',\n      fontSize: width > 767 ? '22px' : '20px',\n      marginBottom: 0\n    },\n    content: {\n      padding: 0,\n      margin: 0,\n      minHeight: '100vh'\n    },\n    card: {\n      width: '100%',\n      marginTop: '3%'\n    },\n    cardBody: {\n      paddingTop: 0\n    },\n    content: {\n      minHeight: width > 767 ? '70vh' : '80vh'\n    },\n    size: width > 767 ? 'default' : 'small',\n    list: {\n      minHeight: 175\n    }\n  }\n\n  const [form] = AntForm.useForm()\n  const [issuesData, setIssuesData] = useState([])\n  const [percent, setPercent] = useState(0)\n\n  useEffect(() => {\n    const repoName = currentProject.name.trim()\n    API.getAllIssues(repoName).then(res => {\n      const issues = res.data[0]\n      const progress = res.data[1]\n      setIssuesData(issues)\n      console.log(progress)\n      const value = Math.round(\n        (progress.closedIssues / progress.totalIssues) * 100\n      )\n      value === NaN ? setPercent(0) : setPercent(value)\n    })\n  }, [currentProject])\n\n  const openNotification = type => {\n    notification[type]({\n      message: 'Issue Created',\n      description: 'You have successfully created a new project issue.'\n    })\n  }\n\n  const onFinish = values => {\n    const { title, body } = values\n    API.addIssue({ repoName: currentProject.name, title, body }).then(res => {\n      form.resetFields()\n      openNotification('success')\n      setIssuesData([\n        { title: title, body: body, state: 'open' },\n        ...issuesData\n      ])\n    })\n  }\n\n  const onDelete = () => {\n    API.deleteProject({\n      repo: currentProject.name,\n      _id: currentProject._id\n    }).then(() => window.location.reload())\n  }\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <div style={styling.content}>\n      <Content style={styling.content}>\n        <Row justify='center'>\n          <Col xl={10} lg={10} md={20} sm={20} xs={20}>\n            <Card\n              size={styling.size}\n              title='Project Actions'\n              headStyle={styling.header}\n              style={styling.card}\n              bodyStyle={styling.cardBody}\n            >\n              <div>\n                <h3>Create Project Issues</h3>\n                <AntForm\n                  size={styling.size}\n                  form={form}\n                  name='issue form'\n                  initialValues={{ title: '', body: '' }}\n                  onFinish={onFinish}\n                  onFinishFailed={onFinishFailed}\n                >\n                  <AntForm.Item\n                    // {...styling.formLayout}\n                    label='Title'\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please input the issue title!'\n                      }\n                    ]}\n                    colon={false}\n                    name='title'\n                  >\n                    <Input />\n                  </AntForm.Item>\n                  <AntForm.Item\n                    // {...styling.formLayout}\n                    label='Description'\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please enter the issue description!'\n                      }\n                    ]}\n                    colon={false}\n                    name='body'\n                  >\n                    <TextArea rows={4} />\n                  </AntForm.Item>\n                  <AntForm.Item>\n                    <Button type='primary' shape='round' htmlType='submit'>\n                      Add Project Issue\n                    </Button>\n                  </AntForm.Item>\n                  <p\n                    style={{\n                      color: 'red',\n                      paddingTop: width > 767 ? '1rem' : 0\n                    }}\n                  >\n                    Warning: Deleting the project erases your project from the\n                    database as well as the files on GitHub.\n                  </p>\n                  <Button\n                    type='primary'\n                    shape='round'\n                    danger\n                    onClick={onDelete}\n                  >\n                    Delete Project\n                  </Button>\n                </AntForm>\n              </div>\n            </Card>\n          </Col>\n\n          <Col className='gutter-row' xl={1} lg={1} md={0} sm={0} xs={0}></Col>\n          <Col xl={10} lg={10} md={20} sm={20} xs={20}>\n            <Card\n              size={styling.size}\n              title='Project Status'\n              headStyle={styling.header}\n              style={styling.card}\n              bodyStyle={styling.cardBody}\n            >\n              <div\n                style={{\n                  wordWrap: 'break-word',\n                  marginTop: '1rem',\n                  backgroundColor: '#F8F8F8',\n                  width: '100%'\n                }}\n              >\n                {/* <Timeline>\n                  {issuesData.map(item => <Timeline.Item>{item.title}</Timeline.Item>)}\n                </Timeline> */}\n                <h3 style={{ paddingTop: '0.5rem' }}>Issues</h3>\n                <List\n                  style={styling.list}\n                  itemLayout='horizontal'\n                  split={false}\n                  dataSource={issuesData}\n                  renderItem={item => {\n                    const iconColor =\n                      item.state === 'open' ? '#87d068' : '#c4c4c4'\n                    return (\n                      <List.Item\n                        style={{\n                          textAlign: 'left',\n                          marginLeft: '2rem'\n                        }}\n                      >\n                        <CarryOutOutlined\n                          style={{\n                            color: iconColor,\n                            fontSize: '2.5vh',\n                            marginRight: 5\n                          }}\n                        />\n                        {item.title}\n                      </List.Item>\n                    )\n                  }}\n                />\n              </div>\n              <br />\n              <Progress width={80} type='circle' percent={percent} />\n              <br />\n              <br />\n              <Button\n                size={width > 767 ? 'default' : 'small'}\n                type='primary'\n                shape='round'\n                onClick={() =>\n                  window.open(\n                    `https://github.com/vogiPartner/${currentProject.name}`,\n                    '_blank'\n                  )\n                }\n              >\n                View Repository\n              </Button>\n            </Card>\n          </Col>\n        </Row>\n      </Content>\n    </div>\n  )\n}\n\nexport default CurrentProject\n","// Import from the react library\nimport React, { useState, useEffect, useContext } from 'react'\n// Import from AntDesign\nimport { Layout, Card, Form, notification } from 'antd'\n// Import Componentes\nimport Navbar from '../../components/Navbar'\nimport PartnerSidebar from '../../components/PartnerSidebar'\nimport NewProject from '../../dashboard-content/partner/NewProject'\nimport OrganizationInfo from '../../dashboard-content/partner/OrganizationInfo'\nimport CurrentProject from '../../dashboard-content/partner/CurrentProgress'\n// Import React Context API\nimport CreatedProjectContext from '../../utils/CreatedProjectContext'\nimport UserContext from '../../utils/UserContext'\nimport API from '../../utils/API'\nimport useWindowSize from '../../utils/useWindowSize'\n\nconst { Content, Footer } = Layout\n\nfunction PartnerDashboard () {\n  const [width] = useWindowSize()\n  const styling = {\n    layout: {\n      height: width > 767 ? '90vh' : '93vh'\n    },\n    header: {\n      backgroundColor: 'white',\n      borderRadius: '15px',\n      borderBottom: 'none'\n    },\n    content: {\n      margin: width > 767 ? '10px' : '5px'\n    },\n    contentDiv: {\n      padding: 24,\n      minHeight: 360,\n      backgroundColor: 'white'\n    },\n    cardSize: width > 767 ? 'default' : 'small'\n  }\n\n  const [form] = Form.useForm()\n  const [title, setTitle] = useState('Organization Information')\n  const user = useContext(UserContext)\n  const [projects, setProjects] = useState([])\n  const [currentProject, setCurrentProject] = useState('')\n\n  const openNotification = type => {\n    notification[type]({\n      message: 'New Project',\n      description: 'You have successfully created a new project.'\n    })\n  }\n\n  const onFinish = values => {\n    const { name } = values\n    const strippedName = name.replace(/\\W/gi, '')\n    API.createProject({ ...values, name: strippedName }).then(res => {\n      openNotification('success')\n      form.resetFields()\n      setProjects([...projects, res.data])\n      return res\n    })\n  }\n\n  const projectValidator = (rule, value) => {\n    for (let project of projects) {\n      if (project.name === value)\n        return Promise.reject('This project name already exists')\n    }\n    return Promise.resolve()\n  }\n\n  const contentHandler = title => {\n    setTitle(title)\n  }\n\n  // Get the user (partner)\n  useEffect(() => {\n    API.getUser().then(res => {\n      const projectNames = res.data.projects.map(\n        ({ _id, name, description, skills, team }) => {\n          return {\n            _id,\n            name,\n            description,\n            skills,\n            team\n          }\n        }\n      )\n      setProjects(projectNames)\n    })\n  }, [])\n\n  const currentProjectHandler = id => {\n    projects.forEach(project => {\n      if (project._id === id) {\n        setCurrentProject(project)\n        setTitle(project.name)\n      }\n    })\n  }\n\n  const renderContent = () => {\n    switch (title) {\n      case 'Organization Information':\n        return <OrganizationInfo />\n      case 'Create New Project':\n        return (\n          <NewProject\n            projectValidator={projectValidator}\n            onFinish={onFinish}\n            form={form}\n          />\n        )\n      case 'Settings':\n        return <div />\n      case currentProject.name:\n        return <CurrentProject currentProject={currentProject} />\n      default:\n        return <div />\n    }\n  }\n\n  return (\n    <>\n      <CreatedProjectContext.Provider value={projects}>\n        <Navbar authenticated='true' />\n        <Layout style={styling.layout}>\n          <PartnerSidebar\n            contentHandler={contentHandler}\n            currentProjectHandler={currentProjectHandler}\n          />\n          <Layout>\n            <Content style={styling.content}>\n              <Card\n                size={styling.cardSize}\n                title={title}\n                headStyle={styling.header}\n                style={{ borderRadius: '15px' }}\n              >\n                {renderContent()}\n              </Card>\n            </Content>\n          </Layout>\n        </Layout>\n      </CreatedProjectContext.Provider>\n    </>\n  )\n}\n\nexport default PartnerDashboard\n","import React, { useEffect, useState } from 'react'\nimport VolunteerDashboard from '../VolunteerDashboard'\nimport PartnerDashboard from '../PartnerDashboard'\nimport UserContext from '../../utils/UserContext'\nimport API from '../../utils/API'\n\nfunction UserDashboard () {\n  const [userRole, setUserRole] = useState()\n  const [user, setUser] = useState('')\n  useEffect(() => {\n    API.getUser().then(res => {\n      setUserRole(res.data.role)\n      setUser(res.data)\n    })\n  }, [])\n  const renderDashboard = () => {\n    switch (userRole) {\n      case 'Volunteer':\n        return <VolunteerDashboard />\n      case 'Partner':\n        return <PartnerDashboard />\n      default:\n        return <div />\n    }\n  }\n  return (\n    <>\n      <UserContext.Provider value={user}>\n        {renderDashboard()}\n      </UserContext.Provider>\n    </>\n  )\n}\n\nexport default UserDashboard\n","import React from 'react'\nimport { Form as AntForm, Input, Button, notification } from 'antd'\nimport API from '../../utils/API'\nimport { Layout, Card, Row, Col } from 'antd'\nimport Navbar from '../../components/Navbar'\nimport useWindowSize from '../../utils/useWindowSize'\nconst { Content } = Layout\n\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 16\n  }\n}\nconst tailLayout = {\n  wrapperCol: {\n    offset: 4,\n    span: 16\n  }\n}\n\nconst openNotification = type => {\n  notification[type]({\n    message: 'Reset Email',\n    description: 'Please check your email for the reset instructions.'\n  })\n}\n\nconst ForgotPassword = () => {\n  const [form] = AntForm.useForm()\n  const [width, height] = useWindowSize()\n\n  const styling = {\n    header: {\n      border: 'none',\n      color: '#353452',\n      fontSize: width > 990 ? 22 : 20\n    },\n    cardInfo: {\n      marginBottom: '2rem'\n    },\n    content: {\n      paddingTop: width > 990 ? 24 : 16,\n      margin: 0,\n      minHeight: width > 767 ? '90vh' : '94vh',\n      backgroundColor: '#F8F8F8'\n    },\n    card: {\n      width: '100%',\n      marginLeft: '0rem',\n      marginBottom: width > 990 ? '0%' : '4%',\n      marginTop: '20%',\n      border: '1px #C4C4C4 solid',\n      borderRadius: '15px'\n    }\n  }\n\n  /*\n    @param values: Object of strings; form input values\n    If successful, reset form \n  */\n\n  const onFinish = values => {\n    console.log('Success:', values)\n    API.resetPasswordEmail(values).then(res => {\n      openNotification('success')\n      form.resetFields()\n      return res\n    })\n  }\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <>\n      <Navbar />\n      <Content style={styling.content}>\n        <Row justify='center'>\n          <Col xl={10} lg={10} md={18} sm={20} xs={22}>\n            <Card\n              size={width > 767 ? 'default' : 'small'}\n              title='Reset Password'\n              headStyle={styling.header}\n              style={styling.card}\n            >\n              <div>\n                <h4 style={styling.cardInfo}>\n                  Enter your email address and we will send you instructions on\n                  how to reset your password.\n                </h4>\n              </div>\n              <AntForm\n                {...layout}\n                name='basic'\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n              >\n                <AntForm.Item\n                  label='Email'\n                  name='email'\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input your email!'\n                    }\n                  ]}\n                >\n                  <Input placeholder='Enter email address' />\n                </AntForm.Item>\n                <AntForm.Item {...tailLayout}>\n                  <Button\n                    type='primary'\n                    htmlType='submit'\n                    shape='round'\n                    style={{ backgroundColor: '#FD4F64', border: 'none' }}\n                  >\n                    Reset Password\n                  </Button>\n                </AntForm.Item>\n              </AntForm>\n            </Card>\n          </Col>\n        </Row>\n      </Content>\n    </>\n  )\n}\n\nexport default ForgotPassword\n","import React, {useState} from 'react'\nimport { Form as AntForm, Input, Button, notification } from 'antd'\nimport API from '../../utils/API'\nimport { Layout, Card, Row, Col, Divider } from 'antd'\nimport Navbar from '../../components/Navbar'\nimport useWindowSize from '../../utils/useWindowSize'\nimport { useLocation, Redirect } from 'react-router-dom'\n\nconst { Content } = Layout\n\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 16\n  }\n}\nconst tailLayout = {\n  wrapperCol: {\n    offset: 4,\n    span: 16\n  }\n}\n\nconst openNotification = type => {\n  notification[type]({\n    message: 'Reset Email',\n    description: 'You have successfully changed your password.'\n  })\n}\n\nconst ResetPassword = () => {\n  const [form] = AntForm.useForm()\n  const [width, height] = useWindowSize()\n  const [redirect, setRedirect] = useState(false)\n\n  const styling = {\n    header: {\n      border: 'none',\n      color: '#353452',\n      fontSize: width > 990 ? 22 : 20\n    },\n    cardInfo: {\n      marginBottom: '2rem'\n    },\n    content: {\n      paddingTop: width > 990 ? 24 : 16,\n      margin: 0,\n      minHeight: '80vh',\n      backgroundColor: '#F8F8F8'\n    },\n    card: {\n      width: '100%',\n      marginLeft: '0rem',\n      marginBottom: width > 990 ? '0%' : '4%',\n      marginTop: width > 990 ? '10%' : '0%',\n      border: '1px #C4C4C4 solid',\n      borderRadius: '15px'\n    }\n  }\n\n  /*\n    @param values: Object of strings; form input values\n    If successful, reset form and redirect to login page\n  */\n  const onFinish = values => {\n    console.log('Success:', values)\n    API.resetPassword(values).then(res => {\n      openNotification('success')\n      form.resetFields()\n      setRedirect(true)\n      return res\n    })\n  }\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo)\n  }\n\n  // React method to get the path name and return as string\n  const { pathname } = useLocation()\n\n  // Redirect to login page if password is successfully reset\n  if (redirect) {\n    return <Redirect to='/login' />\n  }\n\n  return (\n    <>\n      <Navbar />\n      <Content style={styling.content}>\n        <Row justify='center'>\n          <Col xl={10} lg={10} md={18} sm={20} xs={22}>\n            <Card\n              size={width > 767 ? 'default' : 'small'}\n              shape='round'\n              title='Reset Password'\n              headStyle={styling.header}\n              style={styling.card}\n            >\n              <div>\n                <h4 style={styling.cardInfo}>\n                  Enter your a new password and confirm.\n                </h4>\n              </div>\n              <AntForm\n                {...layout}\n                name='basic'\n                onFinish={values =>\n                  onFinish({\n                    ...values,\n                    token: pathname.split('/reset/').pop()\n                  })\n                }\n                onFinishFailed={onFinishFailed}\n              >\n                <AntForm.Item\n                  name='password'\n                  label='Password'\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please input your password!'\n                    }\n                  ]}\n                  hasFeedback\n                >\n                  <Input.Password />\n                </AntForm.Item>\n                <AntForm.Item\n                  name='confirm'\n                  label='Confirm Password'\n                  dependencies={['password']}\n                  hasFeedback\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please confirm your password!'\n                    },\n                    ({ getFieldValue }) => ({\n                      validator (rule, value) {\n                        if (!value || getFieldValue('password') === value) {\n                          return Promise.resolve()\n                        }\n                        return Promise.reject(\n                          'The two passwords that you entered do not match!'\n                        )\n                      }\n                    })\n                  ]}\n                >\n                  <Input.Password />\n                </AntForm.Item>\n                <AntForm.Item {...tailLayout}>\n                  <Button\n                    type='primary'\n                    htmlType='submit'\n                    shape='round'\n                    style={{ backgroundColor: '#FD4F64', border: 'none' }}\n                  >\n                    Reset Password\n                  </Button>\n                </AntForm.Item>\n              </AntForm>\n            </Card>\n          </Col>\n        </Row>\n      </Content>\n    </>\n  )\n}\n\nexport default ResetPassword\n","import React from 'react'\nimport './App.css'\nimport 'antd/dist/antd.css'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport ProtectedRoute from './utils/ProtectedRoute.js'\nimport Landing from './pages/Landing'\nimport Login from './pages/Login'\nimport SignUp from './pages/Signup'\nimport UserDashboard from './pages/UserDashboard'\nimport ForgotPassword from './pages/ForgotPassword'\nimport ResetPassword from './pages/ResetPassword'\n\nfunction App () {\n  return (\n    <div className='App'>\n      {/* <AuthContext.Provider value={true}> */}\n      {/* <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}> */}\n      <Router>\n        <Switch>\n          <Route exact path='/'>\n            <Landing />\n          </Route>\n          <Route exact path='/signup'>\n            <SignUp />\n          </Route>\n          <Route exact path='/login'>\n            <Login />\n          </Route>\n          <Route exact path='/forgot'>\n            <ForgotPassword />\n          </Route>\n          <Route exact path='/reset/:token'>\n            <ResetPassword />\n          </Route>\n          <ProtectedRoute\n            exact\n            path='/user/dashboard'\n            component={UserDashboard}\n          />\n        </Switch>\n      </Router>\n      {/* </AuthContext.Provider> */}\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}